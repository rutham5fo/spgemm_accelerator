// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_compare_Pipeline_COMP_OUT_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        reBuf_read,
        reBuf_write,
        curBuf_write,
        sel_reBuf_4,
        sel_curBuf_4,
        val1_none,
        val2_none,
        switch_cond1,
        switch_cond2,
        lastA,
        compRegs_2_0_read,
        compRegs_2_1_read,
        compRegs_2_2_read,
        compRegs_2_3_read,
        compRegs_3_0_read,
        compRegs_3_1_read,
        compRegs_3_2_read,
        compRegs_3_3_read,
        mul_ln547,
        mul_ln547_1,
        mul_ln547_2,
        mul_ln547_3,
        mul_ln547_4,
        mul_ln547_5,
        mul_ln547_6,
        mul_ln547_7,
        mult_out_valid,
        force_finish,
        tmp_mult_out_elems_value_address0,
        tmp_mult_out_elems_value_ce0,
        tmp_mult_out_elems_value_q0,
        tmp_mult_out_elems_index_address0,
        tmp_mult_out_elems_index_ce0,
        tmp_mult_out_elems_index_q0,
        tmp_mult_out_elems_last_address0,
        tmp_mult_out_elems_last_ce0,
        tmp_mult_out_elems_last_q0,
        tmp_mult_out_elems_extra_flag_address0,
        tmp_mult_out_elems_extra_flag_ce0,
        tmp_mult_out_elems_extra_flag_q0,
        reBuf_read_1_out,
        reBuf_read_1_out_ap_vld,
        reBuf_write_1_out,
        reBuf_write_1_out_ap_vld,
        curBuf_write_1_out,
        curBuf_write_1_out_ap_vld,
        tmp_writeback_stream_empty_out,
        tmp_writeback_stream_empty_out_ap_vld,
        tmp_output_valid_out,
        tmp_output_valid_out_ap_vld,
        sel_reBuf_out,
        sel_reBuf_out_ap_vld,
        sel_curBuf_out,
        sel_curBuf_out_ap_vld,
        val1_none_1_out,
        val1_none_1_out_ap_vld,
        val2_none_1_out,
        val2_none_1_out_ap_vld,
        switch_cond1_1_out,
        switch_cond1_1_out_ap_vld,
        switch_cond2_1_out,
        switch_cond2_1_out_ap_vld,
        lastA_1_out,
        lastA_1_out_ap_vld,
        val1_value_out,
        val1_value_out_ap_vld,
        val1_index_out,
        val1_index_out_ap_vld,
        val1_last_out,
        val1_last_out_ap_vld,
        val1_extra_flag_out,
        val1_extra_flag_out_ap_vld,
        val2_value_out,
        val2_value_out_ap_vld,
        val2_index_out,
        val2_index_out_ap_vld,
        val2_last_out,
        val2_last_out_ap_vld,
        val2_extra_flag_out,
        val2_extra_flag_out_ap_vld,
        comp_data_out_address0,
        comp_data_out_ce0,
        comp_data_out_we0,
        comp_data_out_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] reBuf_read;
input  [7:0] reBuf_write;
input  [7:0] curBuf_write;
input  [0:0] sel_reBuf_4;
input  [0:0] sel_curBuf_4;
input  [0:0] val1_none;
input  [0:0] val2_none;
input  [0:0] switch_cond1;
input  [0:0] switch_cond2;
input  [0:0] lastA;
input  [7:0] compRegs_2_0_read;
input  [7:0] compRegs_2_1_read;
input  [0:0] compRegs_2_2_read;
input  [0:0] compRegs_2_3_read;
input  [7:0] compRegs_3_0_read;
input  [7:0] compRegs_3_1_read;
input  [0:0] compRegs_3_2_read;
input  [0:0] compRegs_3_3_read;
input  [6:0] mul_ln547;
input  [6:0] mul_ln547_1;
input  [6:0] mul_ln547_2;
input  [6:0] mul_ln547_3;
input  [6:0] mul_ln547_4;
input  [6:0] mul_ln547_5;
input  [6:0] mul_ln547_6;
input  [6:0] mul_ln547_7;
input  [0:0] mult_out_valid;
input  [0:0] force_finish;
output  [5:0] tmp_mult_out_elems_value_address0;
output   tmp_mult_out_elems_value_ce0;
input  [7:0] tmp_mult_out_elems_value_q0;
output  [5:0] tmp_mult_out_elems_index_address0;
output   tmp_mult_out_elems_index_ce0;
input  [7:0] tmp_mult_out_elems_index_q0;
output  [5:0] tmp_mult_out_elems_last_address0;
output   tmp_mult_out_elems_last_ce0;
input  [0:0] tmp_mult_out_elems_last_q0;
output  [5:0] tmp_mult_out_elems_extra_flag_address0;
output   tmp_mult_out_elems_extra_flag_ce0;
input  [0:0] tmp_mult_out_elems_extra_flag_q0;
output  [7:0] reBuf_read_1_out;
output   reBuf_read_1_out_ap_vld;
output  [7:0] reBuf_write_1_out;
output   reBuf_write_1_out_ap_vld;
output  [7:0] curBuf_write_1_out;
output   curBuf_write_1_out_ap_vld;
output  [0:0] tmp_writeback_stream_empty_out;
output   tmp_writeback_stream_empty_out_ap_vld;
output  [0:0] tmp_output_valid_out;
output   tmp_output_valid_out_ap_vld;
output  [0:0] sel_reBuf_out;
output   sel_reBuf_out_ap_vld;
output  [0:0] sel_curBuf_out;
output   sel_curBuf_out_ap_vld;
output  [0:0] val1_none_1_out;
output   val1_none_1_out_ap_vld;
output  [0:0] val2_none_1_out;
output   val2_none_1_out_ap_vld;
output  [0:0] switch_cond1_1_out;
output   switch_cond1_1_out_ap_vld;
output  [0:0] switch_cond2_1_out;
output   switch_cond2_1_out_ap_vld;
output  [0:0] lastA_1_out;
output   lastA_1_out_ap_vld;
output  [7:0] val1_value_out;
output   val1_value_out_ap_vld;
output  [7:0] val1_index_out;
output   val1_index_out_ap_vld;
output  [0:0] val1_last_out;
output   val1_last_out_ap_vld;
output  [0:0] val1_extra_flag_out;
output   val1_extra_flag_out_ap_vld;
output  [7:0] val2_value_out;
output   val2_value_out_ap_vld;
output  [7:0] val2_index_out;
output   val2_index_out_ap_vld;
output  [0:0] val2_last_out;
output   val2_last_out_ap_vld;
output  [0:0] val2_extra_flag_out;
output   val2_extra_flag_out_ap_vld;
output  [5:0] comp_data_out_address0;
output   comp_data_out_ce0;
output   comp_data_out_we0;
output  [16:0] comp_data_out_d0;

reg ap_idle;
reg tmp_mult_out_elems_value_ce0;
reg tmp_mult_out_elems_index_ce0;
reg tmp_mult_out_elems_last_ce0;
reg tmp_mult_out_elems_extra_flag_ce0;
reg reBuf_read_1_out_ap_vld;
reg reBuf_write_1_out_ap_vld;
reg curBuf_write_1_out_ap_vld;
reg tmp_writeback_stream_empty_out_ap_vld;
reg tmp_output_valid_out_ap_vld;
reg sel_reBuf_out_ap_vld;
reg sel_curBuf_out_ap_vld;
reg val1_none_1_out_ap_vld;
reg val2_none_1_out_ap_vld;
reg switch_cond1_1_out_ap_vld;
reg switch_cond2_1_out_ap_vld;
reg lastA_1_out_ap_vld;
reg val1_value_out_ap_vld;
reg val1_index_out_ap_vld;
reg val1_last_out_ap_vld;
reg val1_extra_flag_out_ap_vld;
reg val2_value_out_ap_vld;
reg val2_index_out_ap_vld;
reg val2_last_out_ap_vld;
reg val2_extra_flag_out_ap_vld;
reg comp_data_out_ce0;
reg comp_data_out_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln529_fu_1029_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [7:0] compRegs_memPC1_value_address0;
reg    compRegs_memPC1_value_ce0;
reg    compRegs_memPC1_value_we0;
wire   [7:0] compRegs_memPC1_value_address1;
reg    compRegs_memPC1_value_ce1;
wire   [7:0] compRegs_memPC1_value_q1;
wire   [7:0] compRegs_memPC1_index_address0;
reg    compRegs_memPC1_index_ce0;
reg    compRegs_memPC1_index_we0;
wire   [7:0] compRegs_memPC1_index_address1;
reg    compRegs_memPC1_index_ce1;
wire   [7:0] compRegs_memPC1_index_q1;
wire   [7:0] compRegs_memPC1_last_address0;
reg    compRegs_memPC1_last_ce0;
reg    compRegs_memPC1_last_we0;
wire   [7:0] compRegs_memPC1_last_address1;
reg    compRegs_memPC1_last_ce1;
wire   [0:0] compRegs_memPC1_last_q1;
wire   [7:0] compRegs_memPC1_extra_flag_address0;
reg    compRegs_memPC1_extra_flag_ce0;
reg    compRegs_memPC1_extra_flag_we0;
wire   [7:0] compRegs_memPC1_extra_flag_address1;
reg    compRegs_memPC1_extra_flag_ce1;
wire   [0:0] compRegs_memPC1_extra_flag_q1;
wire   [7:0] compRegs_memPC0_value_address0;
reg    compRegs_memPC0_value_ce0;
reg    compRegs_memPC0_value_we0;
wire   [7:0] compRegs_memPC0_value_address1;
reg    compRegs_memPC0_value_ce1;
wire   [7:0] compRegs_memPC0_value_q1;
wire   [7:0] compRegs_memPC0_index_address0;
reg    compRegs_memPC0_index_ce0;
reg    compRegs_memPC0_index_we0;
wire   [7:0] compRegs_memPC0_index_address1;
reg    compRegs_memPC0_index_ce1;
wire   [7:0] compRegs_memPC0_index_q1;
wire   [7:0] compRegs_memPC0_last_address0;
reg    compRegs_memPC0_last_ce0;
reg    compRegs_memPC0_last_we0;
wire   [7:0] compRegs_memPC0_last_address1;
reg    compRegs_memPC0_last_ce1;
wire   [0:0] compRegs_memPC0_last_q1;
wire   [7:0] compRegs_memPC0_extra_flag_address0;
reg    compRegs_memPC0_extra_flag_ce0;
reg    compRegs_memPC0_extra_flag_we0;
wire   [7:0] compRegs_memPC0_extra_flag_address1;
reg    compRegs_memPC0_extra_flag_ce1;
wire   [0:0] compRegs_memPC0_extra_flag_q1;
reg   [0:0] stream_last_reg_811;
reg   [0:0] switch_cond1_1_reg_822;
reg   [0:0] val1_last_reg_834;
reg   [0:0] val1_extra_flag_reg_846;
reg   [0:0] val2_last_reg_858;
reg   [0:0] val2_extra_flag_reg_870;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] mul_ln547_3_cast_fu_905_p1;
reg   [7:0] mul_ln547_3_cast_reg_2210;
wire   [7:0] mul_ln547_1_cast_fu_909_p1;
reg   [7:0] mul_ln547_1_cast_reg_2215;
wire   [7:0] mul_ln547_2_cast_fu_913_p1;
reg   [7:0] mul_ln547_2_cast_reg_2220;
wire   [7:0] mul_ln547_cast_fu_917_p1;
reg   [7:0] mul_ln547_cast_reg_2225;
wire   [7:0] mul_ln547_7_cast_fu_921_p1;
reg   [7:0] mul_ln547_7_cast_reg_2230;
wire   [7:0] mul_ln547_5_cast_fu_925_p1;
reg   [7:0] mul_ln547_5_cast_reg_2235;
wire   [7:0] mul_ln547_6_cast_fu_929_p1;
reg   [7:0] mul_ln547_6_cast_reg_2240;
wire   [7:0] mul_ln547_4_cast_fu_933_p1;
reg   [7:0] mul_ln547_4_cast_reg_2245;
reg   [0:0] icmp_ln529_reg_2250;
wire   [0:0] or_ln534_1_fu_1071_p2;
reg   [0:0] or_ln534_1_reg_2254;
wire   [0:0] val1_none_2_fu_1091_p2;
reg   [0:0] val1_none_2_reg_2284;
wire   [0:0] or_ln546_fu_1225_p2;
reg   [0:0] or_ln546_reg_2333;
wire   [0:0] val2_none_2_fu_1231_p2;
reg   [0:0] val2_none_2_reg_2341;
wire   [7:0] reBuf_read_9_fu_1237_p3;
reg   [7:0] reBuf_read_9_reg_2347;
wire   [0:0] and_ln553_fu_1245_p2;
reg   [0:0] and_ln553_reg_2354;
wire   [0:0] icmp_ln585_fu_1251_p2;
reg   [0:0] icmp_ln585_reg_2358;
wire   [0:0] val1_extra_flag_2_fu_1320_p3;
wire   [0:0] val1_last_2_fu_1327_p3;
wire   [0:0] stream_last_4_fu_1355_p3;
wire   [0:0] val2_extra_flag_2_fu_1394_p3;
wire   [0:0] val2_last_2_fu_1401_p3;
reg   [0:0] ap_phi_mux_stream_last_phi_fu_814_p4;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_switch_cond1_1_phi_fu_825_p4;
reg   [0:0] ap_phi_mux_switch_cond1_3_phi_fu_887_p8;
reg   [0:0] ap_phi_reg_pp0_iter1_switch_cond1_3_reg_882;
wire   [0:0] select_ln546_6_fu_1650_p3;
wire   [0:0] or_ln546_3_fu_1644_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_switch_cond1_3_reg_882;
wire   [63:0] zext_ln535_fu_1077_p1;
wire   [63:0] zext_ln547_fu_1117_p1;
wire   [63:0] zext_ln547_1_fu_1128_p1;
wire   [63:0] zext_ln547_2_fu_1139_p1;
wire   [63:0] zext_ln547_3_fu_1150_p1;
wire   [63:0] zext_ln547_4_fu_1161_p1;
wire   [63:0] zext_ln547_5_fu_1172_p1;
wire   [63:0] zext_ln547_6_fu_1183_p1;
wire   [63:0] zext_ln547_7_fu_1194_p1;
wire   [63:0] zext_ln600_1_fu_1680_p1;
wire   [63:0] zext_ln600_2_fu_1690_p1;
wire   [63:0] zext_ln600_3_fu_1700_p1;
wire   [63:0] zext_ln600_4_fu_1710_p1;
wire   [63:0] zext_ln600_5_fu_1720_p1;
wire   [63:0] zext_ln600_6_fu_1730_p1;
wire   [63:0] zext_ln600_7_fu_1740_p1;
wire   [63:0] zext_ln600_8_fu_1750_p1;
wire   [63:0] zext_ln600_fu_1670_p1;
reg   [7:0] val2_index_fu_168;
wire   [7:0] val2_index_2_fu_1408_p3;
reg   [7:0] val2_value_fu_172;
wire   [7:0] val2_value_2_fu_1415_p3;
reg   [7:0] val1_index_fu_176;
wire   [7:0] val1_index_3_fu_1334_p3;
reg   [7:0] val1_value_fu_180;
wire   [7:0] val1_value_3_fu_1341_p3;
reg   [0:0] lastA_1_fu_184;
wire   [0:0] lastA_5_fu_1348_p3;
reg   [0:0] switch_cond2_1_fu_188;
reg   [0:0] val2_none_1_fu_192;
wire   [0:0] or_ln546_2_fu_1606_p2;
reg   [0:0] ap_sig_allocacmp_val2_none_1_load;
reg   [0:0] val1_none_1_fu_196;
wire   [0:0] or_ln546_4_fu_1664_p2;
reg   [0:0] ap_sig_allocacmp_val1_none_1_load;
reg   [7:0] mult_ptr_fu_200;
wire   [7:0] mult_ptr_2_fu_1097_p3;
reg   [7:0] ap_sig_allocacmp_mult_ptr_load;
reg   [5:0] j_fu_204;
wire   [5:0] add_ln529_fu_1035_p2;
reg   [5:0] ap_sig_allocacmp_j_5;
reg   [0:0] sel_curBuf_fu_208;
wire   [0:0] sel_curBuf_1_fu_1856_p2;
reg   [0:0] sel_reBuf_fu_212;
wire   [0:0] sel_reBuf_1_fu_1862_p2;
reg   [0:0] tmp_output_valid_fu_216;
wire   [0:0] or_ln588_fu_1944_p2;
reg   [0:0] tmp_writeback_stream_empty_fu_220;
wire   [0:0] select_ln588_fu_1950_p3;
reg   [7:0] reBuf_write_1_fu_224;
wire   [7:0] reBuf_write_2_fu_1868_p3;
reg   [7:0] ap_sig_allocacmp_reBuf_write_1_load_1;
reg   [7:0] curBuf_write_1_fu_228;
wire   [7:0] curBuf_write_3_fu_1781_p3;
reg   [7:0] reBuf_read_1_fu_232;
wire   [7:0] reBuf_read_10_fu_1875_p3;
reg   [7:0] ap_sig_allocacmp_reBuf_read_4;
wire    ap_block_pp0_stage0_01001;
wire   [7:0] result_value_5_fu_1629_p3;
wire   [7:0] result_index_3_fu_1619_p3;
wire   [0:0] and_ln546_fu_1611_p2;
wire   [0:0] and_ln534_fu_1053_p2;
wire   [0:0] or_ln534_fu_1065_p2;
wire   [0:0] xor_ln534_fu_1059_p2;
wire   [7:0] mult_ptr_1_fu_1085_p2;
wire   [7:0] add_ln547_fu_1111_p2;
wire   [7:0] add_ln547_1_fu_1122_p2;
wire   [7:0] add_ln547_2_fu_1133_p2;
wire   [7:0] add_ln547_3_fu_1144_p2;
wire   [7:0] add_ln547_4_fu_1155_p2;
wire   [7:0] add_ln547_5_fu_1166_p2;
wire   [7:0] add_ln547_6_fu_1177_p2;
wire   [7:0] add_ln547_7_fu_1188_p2;
wire   [0:0] icmp_ln550_fu_1199_p2;
wire   [7:0] reBuf_read_7_fu_1205_p2;
wire   [0:0] icmp_ln546_fu_1105_p2;
wire   [0:0] sel_tmp_fu_1219_p2;
wire   [7:0] reBuf_read_8_fu_1211_p3;
wire   [0:0] lastA_2_fu_1310_p2;
wire   [0:0] stream_last_1_fu_1315_p2;
wire   [0:0] val2_extra_flag_1_fu_1386_p3;
wire   [0:0] empty_102_fu_1362_p3;
wire   [7:0] empty_104_fu_1378_p3;
wire   [7:0] empty_103_fu_1370_p3;
wire   [0:0] xor_ln584_fu_1444_p2;
wire   [0:0] and_ln584_fu_1450_p2;
wire   [0:0] and_ln584_1_fu_1467_p2;
wire   [0:0] or_ln555_fu_1428_p2;
wire   [0:0] icmp_ln555_fu_1432_p2;
wire   [0:0] xor_ln555_fu_1478_p2;
wire   [0:0] icmp_ln565_fu_1490_p2;
wire   [0:0] xor_ln565_1_fu_1496_p2;
wire   [0:0] or_ln565_fu_1502_p2;
wire   [0:0] xor_ln565_fu_1508_p2;
wire   [0:0] or_ln565_1_fu_1514_p2;
wire   [0:0] or_ln584_fu_1472_p2;
wire   [0:0] switch_cond1_2_fu_1456_p2;
wire   [0:0] and_ln555_fu_1484_p2;
wire   [7:0] result_value_fu_1438_p2;
wire   [7:0] result_value_3_fu_1527_p3;
wire   [0:0] xor_ln555_1_fu_1551_p2;
wire   [0:0] or_ln555_1_fu_1557_p2;
wire   [0:0] or_ln555_2_fu_1563_p2;
wire   [0:0] result_last_1_fu_1462_p2;
wire   [0:0] result_last_fu_1569_p2;
wire   [0:0] icmp_ln565_1_fu_1583_p2;
wire   [0:0] xor_ln565_2_fu_1589_p2;
wire   [0:0] and_ln565_fu_1595_p2;
wire   [0:0] or_ln546_1_fu_1601_p2;
wire   [0:0] result_last_2_fu_1575_p3;
wire   [7:0] result_index_2_fu_1543_p3;
wire   [7:0] result_value_4_fu_1535_p3;
wire   [0:0] and_ln546_1_fu_1639_p2;
wire   [0:0] select_ln565_fu_1519_p3;
wire   [0:0] xor_ln546_fu_1658_p2;
wire   [7:0] add_ln600_fu_1675_p2;
wire   [7:0] add_ln600_1_fu_1685_p2;
wire   [7:0] add_ln600_2_fu_1695_p2;
wire   [7:0] add_ln600_3_fu_1705_p2;
wire   [7:0] add_ln600_4_fu_1715_p2;
wire   [7:0] add_ln600_5_fu_1725_p2;
wire   [7:0] add_ln600_6_fu_1735_p2;
wire   [7:0] add_ln600_7_fu_1745_p2;
wire   [0:0] icmp_ln602_fu_1769_p2;
wire   [7:0] curBuf_write_2_fu_1775_p2;
wire   [0:0] and_ln588_fu_1932_p2;
wire   [0:0] tmp_writeback_stream_empty_1_fu_1938_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_133;
reg    ap_enable_state1_pp0_iter0_stage0;
reg    ap_enable_operation_179;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_predicate_op267_store_state2;
reg    ap_enable_operation_267;
reg    ap_enable_operation_134;
reg    ap_enable_operation_180;
reg    ap_predicate_op268_store_state2;
reg    ap_enable_operation_268;
reg    ap_enable_operation_135;
reg    ap_enable_operation_181;
reg    ap_predicate_op269_store_state2;
reg    ap_enable_operation_269;
reg    ap_enable_operation_136;
reg    ap_enable_operation_182;
reg    ap_predicate_op270_store_state2;
reg    ap_enable_operation_270;
reg    ap_enable_operation_137;
reg    ap_enable_operation_183;
reg    ap_predicate_op262_store_state2;
reg    ap_enable_operation_262;
reg    ap_enable_operation_138;
reg    ap_enable_operation_184;
reg    ap_predicate_op263_store_state2;
reg    ap_enable_operation_263;
reg    ap_enable_operation_139;
reg    ap_enable_operation_185;
reg    ap_predicate_op264_store_state2;
reg    ap_enable_operation_264;
reg    ap_enable_operation_140;
reg    ap_enable_operation_186;
reg    ap_predicate_op265_store_state2;
reg    ap_enable_operation_265;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1134;
reg    ap_condition_367;
reg    ap_condition_1141;
reg    ap_condition_1145;
reg    ap_condition_1150;
reg    ap_condition_1154;
reg    ap_condition_1159;
reg    ap_condition_1162;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

system_top_compare_Pipeline_COMP_OUT_LOOP_compRegs_memPC1_value_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 164 ),
    .AddressWidth( 8 ))
compRegs_memPC1_value_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(compRegs_memPC1_value_address0),
    .ce0(compRegs_memPC1_value_ce0),
    .we0(compRegs_memPC1_value_we0),
    .d0(result_value_5_fu_1629_p3),
    .address1(compRegs_memPC1_value_address1),
    .ce1(compRegs_memPC1_value_ce1),
    .q1(compRegs_memPC1_value_q1)
);

system_top_compare_Pipeline_COMP_OUT_LOOP_compRegs_memPC1_value_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 164 ),
    .AddressWidth( 8 ))
compRegs_memPC1_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(compRegs_memPC1_index_address0),
    .ce0(compRegs_memPC1_index_ce0),
    .we0(compRegs_memPC1_index_we0),
    .d0(result_index_3_fu_1619_p3),
    .address1(compRegs_memPC1_index_address1),
    .ce1(compRegs_memPC1_index_ce1),
    .q1(compRegs_memPC1_index_q1)
);

system_top_compare_Pipeline_COMP_OUT_LOOP_compRegs_memPC1_last_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 164 ),
    .AddressWidth( 8 ))
compRegs_memPC1_last_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(compRegs_memPC1_last_address0),
    .ce0(compRegs_memPC1_last_ce0),
    .we0(compRegs_memPC1_last_we0),
    .d0(and_ln546_fu_1611_p2),
    .address1(compRegs_memPC1_last_address1),
    .ce1(compRegs_memPC1_last_ce1),
    .q1(compRegs_memPC1_last_q1)
);

system_top_compare_Pipeline_COMP_OUT_LOOP_compRegs_memPC1_last_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 164 ),
    .AddressWidth( 8 ))
compRegs_memPC1_extra_flag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(compRegs_memPC1_extra_flag_address0),
    .ce0(compRegs_memPC1_extra_flag_ce0),
    .we0(compRegs_memPC1_extra_flag_we0),
    .d0(1'd0),
    .address1(compRegs_memPC1_extra_flag_address1),
    .ce1(compRegs_memPC1_extra_flag_ce1),
    .q1(compRegs_memPC1_extra_flag_q1)
);

system_top_compare_Pipeline_COMP_OUT_LOOP_compRegs_memPC1_value_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 164 ),
    .AddressWidth( 8 ))
compRegs_memPC0_value_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(compRegs_memPC0_value_address0),
    .ce0(compRegs_memPC0_value_ce0),
    .we0(compRegs_memPC0_value_we0),
    .d0(result_value_5_fu_1629_p3),
    .address1(compRegs_memPC0_value_address1),
    .ce1(compRegs_memPC0_value_ce1),
    .q1(compRegs_memPC0_value_q1)
);

system_top_compare_Pipeline_COMP_OUT_LOOP_compRegs_memPC1_value_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 164 ),
    .AddressWidth( 8 ))
compRegs_memPC0_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(compRegs_memPC0_index_address0),
    .ce0(compRegs_memPC0_index_ce0),
    .we0(compRegs_memPC0_index_we0),
    .d0(result_index_3_fu_1619_p3),
    .address1(compRegs_memPC0_index_address1),
    .ce1(compRegs_memPC0_index_ce1),
    .q1(compRegs_memPC0_index_q1)
);

system_top_compare_Pipeline_COMP_OUT_LOOP_compRegs_memPC1_last_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 164 ),
    .AddressWidth( 8 ))
compRegs_memPC0_last_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(compRegs_memPC0_last_address0),
    .ce0(compRegs_memPC0_last_ce0),
    .we0(compRegs_memPC0_last_we0),
    .d0(and_ln546_fu_1611_p2),
    .address1(compRegs_memPC0_last_address1),
    .ce1(compRegs_memPC0_last_ce1),
    .q1(compRegs_memPC0_last_q1)
);

system_top_compare_Pipeline_COMP_OUT_LOOP_compRegs_memPC1_last_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 164 ),
    .AddressWidth( 8 ))
compRegs_memPC0_extra_flag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(compRegs_memPC0_extra_flag_address0),
    .ce0(compRegs_memPC0_extra_flag_ce0),
    .we0(compRegs_memPC0_extra_flag_we0),
    .d0(1'd0),
    .address1(compRegs_memPC0_extra_flag_address1),
    .ce1(compRegs_memPC0_extra_flag_ce1),
    .q1(compRegs_memPC0_extra_flag_q1)
);

system_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_367)) begin
        if (((1'd1 == and_ln553_fu_1245_p2) & (icmp_ln529_fu_1029_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_switch_cond1_3_reg_882 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_switch_cond1_3_reg_882 <= ap_phi_reg_pp0_iter0_switch_cond1_3_reg_882;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        curBuf_write_1_fu_228 <= curBuf_write;
    end else if ((((or_ln546_3_fu_1644_p2 == 1'd0) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln546_6_fu_1650_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_ln546_3_fu_1644_p2 == 1'd1) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        curBuf_write_1_fu_228 <= curBuf_write_3_fu_1781_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln529_fu_1029_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
            j_fu_204 <= add_ln529_fu_1035_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_204 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lastA_1_fu_184 <= lastA;
    end else if (((1'd1 == and_ln553_reg_2354) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lastA_1_fu_184 <= 1'd0;
    end else if ((((or_ln546_3_fu_1644_p2 == 1'd0) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln546_6_fu_1650_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_ln546_3_fu_1644_p2 == 1'd1) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lastA_1_fu_184 <= lastA_5_fu_1348_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln529_fu_1029_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
            mult_ptr_fu_200 <= mult_ptr_2_fu_1097_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            mult_ptr_fu_200 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln553_fu_1245_p2) & (icmp_ln529_fu_1029_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reBuf_read_1_fu_232 <= reBuf_read_9_fu_1237_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reBuf_read_1_fu_232 <= reBuf_read;
    end else if (((or_ln546_3_fu_1644_p2 == 1'd1) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reBuf_read_1_fu_232 <= reBuf_read_10_fu_1875_p3;
    end else if ((((or_ln546_3_fu_1644_p2 == 1'd0) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln546_6_fu_1650_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reBuf_read_1_fu_232 <= reBuf_read_9_reg_2347;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_1145)) begin
            reBuf_write_1_fu_224 <= ap_sig_allocacmp_reBuf_read_4;
        end else if ((ap_loop_init == 1'b1)) begin
            reBuf_write_1_fu_224 <= reBuf_write;
        end else if ((1'b1 == ap_condition_1141)) begin
            reBuf_write_1_fu_224 <= reBuf_write_2_fu_1868_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            sel_curBuf_fu_208 <= sel_curBuf_4;
        end else if ((1'b1 == ap_condition_1141)) begin
            sel_curBuf_fu_208 <= sel_curBuf_1_fu_1856_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            sel_reBuf_fu_212 <= sel_reBuf_4;
        end else if ((1'b1 == ap_condition_1141)) begin
            sel_reBuf_fu_212 <= sel_reBuf_1_fu_1862_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_1150)) begin
            stream_last_reg_811 <= stream_last_4_fu_1355_p3;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            stream_last_reg_811 <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_1150)) begin
            switch_cond1_1_reg_822 <= ap_phi_mux_switch_cond1_3_phi_fu_887_p8;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            switch_cond1_1_reg_822 <= switch_cond1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_1145)) begin
            switch_cond2_1_fu_188 <= 1'd0;
        end else if ((ap_loop_init == 1'b1)) begin
            switch_cond2_1_fu_188 <= switch_cond2;
        end else if ((1'b1 == ap_condition_1141)) begin
            switch_cond2_1_fu_188 <= 1'd0;
        end else if ((1'b1 == ap_condition_1159)) begin
            switch_cond2_1_fu_188 <= 1'd0;
        end else if ((1'b1 == ap_condition_1154)) begin
            switch_cond2_1_fu_188 <= or_ln546_3_fu_1644_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_output_valid_fu_216 <= 1'd0;
        end else if ((1'b1 == ap_condition_1162)) begin
            tmp_output_valid_fu_216 <= or_ln588_fu_1944_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_writeback_stream_empty_fu_220 <= 1'd0;
        end else if ((1'b1 == ap_condition_1162)) begin
            tmp_writeback_stream_empty_fu_220 <= select_ln588_fu_1950_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_1150)) begin
            val1_extra_flag_reg_846 <= val1_extra_flag_2_fu_1320_p3;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            val1_extra_flag_reg_846 <= compRegs_2_3_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            val1_index_fu_176 <= compRegs_2_1_read;
        end else if (((icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            val1_index_fu_176 <= val1_index_3_fu_1334_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_1150)) begin
            val1_last_reg_834 <= val1_last_2_fu_1327_p3;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            val1_last_reg_834 <= compRegs_2_2_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln553_fu_1245_p2) & (icmp_ln529_fu_1029_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val1_none_1_fu_196 <= 1'd1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val1_none_1_fu_196 <= val1_none;
    end else if ((((or_ln546_3_fu_1644_p2 == 1'd0) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln546_6_fu_1650_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_ln546_3_fu_1644_p2 == 1'd1) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        val1_none_1_fu_196 <= or_ln546_4_fu_1664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            val1_value_fu_180 <= compRegs_2_0_read;
        end else if (((icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            val1_value_fu_180 <= val1_value_3_fu_1341_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_1150)) begin
            val2_extra_flag_reg_870 <= val2_extra_flag_2_fu_1394_p3;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            val2_extra_flag_reg_870 <= compRegs_3_3_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            val2_index_fu_168 <= compRegs_3_1_read;
        end else if (((icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            val2_index_fu_168 <= val2_index_2_fu_1408_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_1150)) begin
            val2_last_reg_858 <= val2_last_2_fu_1401_p3;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            val2_last_reg_858 <= compRegs_3_2_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln553_fu_1245_p2) & (icmp_ln529_fu_1029_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val2_none_1_fu_192 <= 1'd1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val2_none_1_fu_192 <= val2_none;
    end else if ((((or_ln546_3_fu_1644_p2 == 1'd0) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln546_6_fu_1650_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_ln546_3_fu_1644_p2 == 1'd1) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        val2_none_1_fu_192 <= or_ln546_2_fu_1606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            val2_value_fu_172 <= compRegs_3_0_read;
        end else if (((icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            val2_value_fu_172 <= val2_value_2_fu_1415_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln529_fu_1029_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln553_reg_2354 <= and_ln553_fu_1245_p2;
        or_ln534_1_reg_2254 <= or_ln534_1_fu_1071_p2;
        or_ln546_reg_2333 <= or_ln546_fu_1225_p2;
        reBuf_read_9_reg_2347 <= reBuf_read_9_fu_1237_p3;
        val1_none_2_reg_2284 <= val1_none_2_fu_1091_p2;
        val2_none_2_reg_2341 <= val2_none_2_fu_1231_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln529_reg_2250 <= icmp_ln529_fu_1029_p2;
        mul_ln547_1_cast_reg_2215[6 : 0] <= mul_ln547_1_cast_fu_909_p1[6 : 0];
        mul_ln547_2_cast_reg_2220[6 : 0] <= mul_ln547_2_cast_fu_913_p1[6 : 0];
        mul_ln547_3_cast_reg_2210[6 : 0] <= mul_ln547_3_cast_fu_905_p1[6 : 0];
        mul_ln547_4_cast_reg_2245[6 : 0] <= mul_ln547_4_cast_fu_933_p1[6 : 0];
        mul_ln547_5_cast_reg_2235[6 : 0] <= mul_ln547_5_cast_fu_925_p1[6 : 0];
        mul_ln547_6_cast_reg_2240[6 : 0] <= mul_ln547_6_cast_fu_929_p1[6 : 0];
        mul_ln547_7_cast_reg_2230[6 : 0] <= mul_ln547_7_cast_fu_921_p1[6 : 0];
        mul_ln547_cast_reg_2225[6 : 0] <= mul_ln547_cast_fu_917_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln529_fu_1029_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_fu_1245_p2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln585_reg_2358 <= icmp_ln585_fu_1251_p2;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ * begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ * begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ * begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_1134)) begin
            ap_phi_mux_stream_last_phi_fu_814_p4 = stream_last_4_fu_1355_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_stream_last_phi_fu_814_p4 = 1'd0;
        end else begin
            ap_phi_mux_stream_last_phi_fu_814_p4 = stream_last_4_fu_1355_p3;
        end
    end else begin
        ap_phi_mux_stream_last_phi_fu_814_p4 = stream_last_4_fu_1355_p3;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_1134)) begin
            ap_phi_mux_switch_cond1_1_phi_fu_825_p4 = ap_phi_mux_switch_cond1_3_phi_fu_887_p8;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_switch_cond1_1_phi_fu_825_p4 = switch_cond1;
        end else begin
            ap_phi_mux_switch_cond1_1_phi_fu_825_p4 = switch_cond1_1_reg_822;
        end
    end else begin
        ap_phi_mux_switch_cond1_1_phi_fu_825_p4 = switch_cond1_1_reg_822;
    end
end

always @ * begin
    if (((or_ln546_3_fu_1644_p2 == 1'd0) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0))) begin
        ap_phi_mux_switch_cond1_3_phi_fu_887_p8 = 1'd1;
    end else if ((((select_ln546_6_fu_1650_p3 == 1'd0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0)) | ((or_ln546_3_fu_1644_p2 == 1'd1) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0)))) begin
        ap_phi_mux_switch_cond1_3_phi_fu_887_p8 = 1'd0;
    end else begin
        ap_phi_mux_switch_cond1_3_phi_fu_887_p8 = ap_phi_reg_pp0_iter1_switch_cond1_3_reg_882;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_5 = 6'd0;
    end else begin
        ap_sig_allocacmp_j_5 = j_fu_204;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_mult_ptr_load = 8'd0;
    end else begin
        ap_sig_allocacmp_mult_ptr_load = mult_ptr_fu_200;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_reBuf_read_4 = reBuf_read;
    end else if (((or_ln546_3_fu_1644_p2 == 1'd1) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_reBuf_read_4 = reBuf_read_10_fu_1875_p3;
    end else if ((((or_ln546_3_fu_1644_p2 == 1'd0) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln546_6_fu_1650_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_sig_allocacmp_reBuf_read_4 = reBuf_read_9_reg_2347;
    end else begin
        ap_sig_allocacmp_reBuf_read_4 = reBuf_read_1_fu_232;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_reBuf_write_1_load_1 = reBuf_write;
        end else if ((1'b1 == ap_condition_1141)) begin
            ap_sig_allocacmp_reBuf_write_1_load_1 = reBuf_write_2_fu_1868_p3;
        end else begin
            ap_sig_allocacmp_reBuf_write_1_load_1 = reBuf_write_1_fu_224;
        end
    end else begin
        ap_sig_allocacmp_reBuf_write_1_load_1 = reBuf_write_1_fu_224;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_val1_none_1_load = val1_none;
    end else if ((((or_ln546_3_fu_1644_p2 == 1'd0) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln546_6_fu_1650_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_ln546_3_fu_1644_p2 == 1'd1) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_sig_allocacmp_val1_none_1_load = or_ln546_4_fu_1664_p2;
    end else begin
        ap_sig_allocacmp_val1_none_1_load = val1_none_1_fu_196;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_val2_none_1_load = val2_none;
    end else if ((((or_ln546_3_fu_1644_p2 == 1'd0) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln546_6_fu_1650_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_ln546_3_fu_1644_p2 == 1'd1) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_sig_allocacmp_val2_none_1_load = or_ln546_2_fu_1606_p2;
    end else begin
        ap_sig_allocacmp_val2_none_1_load = val2_none_1_fu_192;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_extra_flag_ce0 = 1'b1;
    end else begin
        compRegs_memPC0_extra_flag_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_extra_flag_ce1 = 1'b1;
    end else begin
        compRegs_memPC0_extra_flag_ce1 = 1'b0;
    end
end

always @ * begin
    if (((sel_curBuf_fu_208 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_extra_flag_we0 = 1'b1;
    end else begin
        compRegs_memPC0_extra_flag_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_index_ce0 = 1'b1;
    end else begin
        compRegs_memPC0_index_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_index_ce1 = 1'b1;
    end else begin
        compRegs_memPC0_index_ce1 = 1'b0;
    end
end

always @ * begin
    if (((sel_curBuf_fu_208 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_index_we0 = 1'b1;
    end else begin
        compRegs_memPC0_index_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_last_ce0 = 1'b1;
    end else begin
        compRegs_memPC0_last_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_last_ce1 = 1'b1;
    end else begin
        compRegs_memPC0_last_ce1 = 1'b0;
    end
end

always @ * begin
    if (((sel_curBuf_fu_208 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_last_we0 = 1'b1;
    end else begin
        compRegs_memPC0_last_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_value_ce0 = 1'b1;
    end else begin
        compRegs_memPC0_value_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_value_ce1 = 1'b1;
    end else begin
        compRegs_memPC0_value_ce1 = 1'b0;
    end
end

always @ * begin
    if (((sel_curBuf_fu_208 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC0_value_we0 = 1'b1;
    end else begin
        compRegs_memPC0_value_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_extra_flag_ce0 = 1'b1;
    end else begin
        compRegs_memPC1_extra_flag_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_extra_flag_ce1 = 1'b1;
    end else begin
        compRegs_memPC1_extra_flag_ce1 = 1'b0;
    end
end

always @ * begin
    if (((sel_curBuf_fu_208 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_extra_flag_we0 = 1'b1;
    end else begin
        compRegs_memPC1_extra_flag_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_index_ce0 = 1'b1;
    end else begin
        compRegs_memPC1_index_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_index_ce1 = 1'b1;
    end else begin
        compRegs_memPC1_index_ce1 = 1'b0;
    end
end

always @ * begin
    if (((sel_curBuf_fu_208 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_index_we0 = 1'b1;
    end else begin
        compRegs_memPC1_index_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_last_ce0 = 1'b1;
    end else begin
        compRegs_memPC1_last_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_last_ce1 = 1'b1;
    end else begin
        compRegs_memPC1_last_ce1 = 1'b0;
    end
end

always @ * begin
    if (((sel_curBuf_fu_208 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_last_we0 = 1'b1;
    end else begin
        compRegs_memPC1_last_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_value_ce0 = 1'b1;
    end else begin
        compRegs_memPC1_value_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_value_ce1 = 1'b1;
    end else begin
        compRegs_memPC1_value_ce1 = 1'b0;
    end
end

always @ * begin
    if (((sel_curBuf_fu_208 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compRegs_memPC1_value_we0 = 1'b1;
    end else begin
        compRegs_memPC1_value_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        comp_data_out_ce0 = 1'b1;
    end else begin
        comp_data_out_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln553_reg_2354) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        comp_data_out_we0 = 1'b1;
    end else begin
        comp_data_out_we0 = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        curBuf_write_1_out_ap_vld = 1'b1;
    end else begin
        curBuf_write_1_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lastA_1_out_ap_vld = 1'b1;
    end else begin
        lastA_1_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reBuf_read_1_out_ap_vld = 1'b1;
    end else begin
        reBuf_read_1_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reBuf_write_1_out_ap_vld = 1'b1;
    end else begin
        reBuf_write_1_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sel_curBuf_out_ap_vld = 1'b1;
    end else begin
        sel_curBuf_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sel_reBuf_out_ap_vld = 1'b1;
    end else begin
        sel_reBuf_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        switch_cond1_1_out_ap_vld = 1'b1;
    end else begin
        switch_cond1_1_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        switch_cond2_1_out_ap_vld = 1'b1;
    end else begin
        switch_cond2_1_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mult_out_elems_extra_flag_ce0 = 1'b1;
    end else begin
        tmp_mult_out_elems_extra_flag_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mult_out_elems_index_ce0 = 1'b1;
    end else begin
        tmp_mult_out_elems_index_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mult_out_elems_last_ce0 = 1'b1;
    end else begin
        tmp_mult_out_elems_last_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mult_out_elems_value_ce0 = 1'b1;
    end else begin
        tmp_mult_out_elems_value_ce0 = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_output_valid_out_ap_vld = 1'b1;
    end else begin
        tmp_output_valid_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_writeback_stream_empty_out_ap_vld = 1'b1;
    end else begin
        tmp_writeback_stream_empty_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val1_extra_flag_out_ap_vld = 1'b1;
    end else begin
        val1_extra_flag_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val1_index_out_ap_vld = 1'b1;
    end else begin
        val1_index_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val1_last_out_ap_vld = 1'b1;
    end else begin
        val1_last_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val1_none_1_out_ap_vld = 1'b1;
    end else begin
        val1_none_1_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val1_value_out_ap_vld = 1'b1;
    end else begin
        val1_value_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val2_extra_flag_out_ap_vld = 1'b1;
    end else begin
        val2_extra_flag_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val2_index_out_ap_vld = 1'b1;
    end else begin
        val2_index_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val2_last_out_ap_vld = 1'b1;
    end else begin
        val2_last_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val2_none_1_out_ap_vld = 1'b1;
    end else begin
        val2_none_1_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln529_fu_1029_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        val2_value_out_ap_vld = 1'b1;
    end else begin
        val2_value_out_ap_vld = 1'b0;
    end
end

always @ * begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln529_fu_1035_p2 = (ap_sig_allocacmp_j_5 + 6'd1);

assign add_ln547_1_fu_1122_p2 = (mul_ln547_6_cast_fu_929_p1 + ap_sig_allocacmp_reBuf_read_4);

assign add_ln547_2_fu_1133_p2 = (mul_ln547_5_cast_fu_925_p1 + ap_sig_allocacmp_reBuf_read_4);

assign add_ln547_3_fu_1144_p2 = (mul_ln547_7_cast_fu_921_p1 + ap_sig_allocacmp_reBuf_read_4);

assign add_ln547_4_fu_1155_p2 = (mul_ln547_cast_fu_917_p1 + ap_sig_allocacmp_reBuf_read_4);

assign add_ln547_5_fu_1166_p2 = (mul_ln547_2_cast_fu_913_p1 + ap_sig_allocacmp_reBuf_read_4);

assign add_ln547_6_fu_1177_p2 = (mul_ln547_1_cast_fu_909_p1 + ap_sig_allocacmp_reBuf_read_4);

assign add_ln547_7_fu_1188_p2 = (mul_ln547_3_cast_fu_905_p1 + ap_sig_allocacmp_reBuf_read_4);

assign add_ln547_fu_1111_p2 = (mul_ln547_4_cast_fu_933_p1 + ap_sig_allocacmp_reBuf_read_4);

assign add_ln600_1_fu_1685_p2 = (mul_ln547_6_cast_reg_2240 + curBuf_write_1_fu_228);

assign add_ln600_2_fu_1695_p2 = (mul_ln547_5_cast_reg_2235 + curBuf_write_1_fu_228);

assign add_ln600_3_fu_1705_p2 = (mul_ln547_7_cast_reg_2230 + curBuf_write_1_fu_228);

assign add_ln600_4_fu_1715_p2 = (mul_ln547_cast_reg_2225 + curBuf_write_1_fu_228);

assign add_ln600_5_fu_1725_p2 = (mul_ln547_2_cast_reg_2220 + curBuf_write_1_fu_228);

assign add_ln600_6_fu_1735_p2 = (mul_ln547_1_cast_reg_2215 + curBuf_write_1_fu_228);

assign add_ln600_7_fu_1745_p2 = (mul_ln547_3_cast_reg_2210 + curBuf_write_1_fu_228);

assign add_ln600_fu_1675_p2 = (mul_ln547_4_cast_reg_2245 + curBuf_write_1_fu_228);

assign and_ln534_fu_1053_p2 = (mult_out_valid & ap_sig_allocacmp_val1_none_1_load);

assign and_ln546_1_fu_1639_p2 = (or_ln546_2_fu_1606_p2 & icmp_ln585_reg_2358);

assign and_ln546_fu_1611_p2 = (result_last_2_fu_1575_p3 & or_ln546_2_fu_1606_p2);

assign and_ln553_fu_1245_p2 = (val2_none_2_fu_1231_p2 & val1_none_2_fu_1091_p2);

assign and_ln555_fu_1484_p2 = (xor_ln555_fu_1478_p2 & icmp_ln555_fu_1432_p2);

assign and_ln565_fu_1595_p2 = (xor_ln565_2_fu_1589_p2 & xor_ln555_fu_1478_p2);

assign and_ln584_1_fu_1467_p2 = (val1_none_2_reg_2284 & and_ln584_fu_1450_p2);

assign and_ln584_fu_1450_p2 = (xor_ln584_fu_1444_p2 & val1_last_2_fu_1327_p3);

assign and_ln588_fu_1932_p2 = (stream_last_4_fu_1355_p3 & lastA_5_fu_1348_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ * begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ * begin
    ap_condition_1134 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ * begin
    ap_condition_1141 = ((or_ln546_3_fu_1644_p2 == 1'd1) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ * begin
    ap_condition_1145 = ((1'd1 == and_ln553_fu_1245_p2) & (icmp_ln529_fu_1029_p2 == 1'd0) & (ap_start_int == 1'b1));
end

always @ * begin
    ap_condition_1150 = ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ * begin
    ap_condition_1154 = ((select_ln546_6_fu_1650_p3 == 1'd0) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ * begin
    ap_condition_1159 = ((or_ln546_3_fu_1644_p2 == 1'd0) & (select_ln546_6_fu_1650_p3 == 1'd1) & (1'd0 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ * begin
    ap_condition_1162 = ((1'd1 == and_ln553_reg_2354) & (icmp_ln529_reg_2250 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ * begin
    ap_condition_367 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ * begin
    ap_enable_operation_133 = (icmp_ln529_fu_1029_p2 == 1'd0);
end

always @ * begin
    ap_enable_operation_134 = (icmp_ln529_fu_1029_p2 == 1'd0);
end

always @ * begin
    ap_enable_operation_135 = (icmp_ln529_fu_1029_p2 == 1'd0);
end

always @ * begin
    ap_enable_operation_136 = (icmp_ln529_fu_1029_p2 == 1'd0);
end

always @ * begin
    ap_enable_operation_137 = (icmp_ln529_fu_1029_p2 == 1'd0);
end

always @ * begin
    ap_enable_operation_138 = (icmp_ln529_fu_1029_p2 == 1'd0);
end

always @ * begin
    ap_enable_operation_139 = (icmp_ln529_fu_1029_p2 == 1'd0);
end

always @ * begin
    ap_enable_operation_140 = (icmp_ln529_fu_1029_p2 == 1'd0);
end

always @ * begin
    ap_enable_operation_179 = (icmp_ln529_reg_2250 == 1'd0);
end

always @ * begin
    ap_enable_operation_180 = (icmp_ln529_reg_2250 == 1'd0);
end

always @ * begin
    ap_enable_operation_181 = (icmp_ln529_reg_2250 == 1'd0);
end

always @ * begin
    ap_enable_operation_182 = (icmp_ln529_reg_2250 == 1'd0);
end

always @ * begin
    ap_enable_operation_183 = (icmp_ln529_reg_2250 == 1'd0);
end

always @ * begin
    ap_enable_operation_184 = (icmp_ln529_reg_2250 == 1'd0);
end

always @ * begin
    ap_enable_operation_185 = (icmp_ln529_reg_2250 == 1'd0);
end

always @ * begin
    ap_enable_operation_186 = (icmp_ln529_reg_2250 == 1'd0);
end

always @ * begin
    ap_enable_operation_262 = (ap_predicate_op262_store_state2 == 1'b1);
end

always @ * begin
    ap_enable_operation_263 = (ap_predicate_op263_store_state2 == 1'b1);
end

always @ * begin
    ap_enable_operation_264 = (ap_predicate_op264_store_state2 == 1'b1);
end

always @ * begin
    ap_enable_operation_265 = (ap_predicate_op265_store_state2 == 1'b1);
end

always @ * begin
    ap_enable_operation_267 = (ap_predicate_op267_store_state2 == 1'b1);
end

always @ * begin
    ap_enable_operation_268 = (ap_predicate_op268_store_state2 == 1'b1);
end

always @ * begin
    ap_enable_operation_269 = (ap_predicate_op269_store_state2 == 1'b1);
end

always @ * begin
    ap_enable_operation_270 = (ap_predicate_op270_store_state2 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ * begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ * begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_switch_cond1_3_reg_882 = 'bx;

always @ * begin
    ap_predicate_op262_store_state2 = ((sel_curBuf_fu_208 == 1'd0) & (1'd0 == and_ln553_reg_2354));
end

always @ * begin
    ap_predicate_op263_store_state2 = ((sel_curBuf_fu_208 == 1'd0) & (1'd0 == and_ln553_reg_2354));
end

always @ * begin
    ap_predicate_op264_store_state2 = ((sel_curBuf_fu_208 == 1'd0) & (1'd0 == and_ln553_reg_2354));
end

always @ * begin
    ap_predicate_op265_store_state2 = ((sel_curBuf_fu_208 == 1'd0) & (1'd0 == and_ln553_reg_2354));
end

always @ * begin
    ap_predicate_op267_store_state2 = ((sel_curBuf_fu_208 == 1'd1) & (1'd0 == and_ln553_reg_2354));
end

always @ * begin
    ap_predicate_op268_store_state2 = ((sel_curBuf_fu_208 == 1'd1) & (1'd0 == and_ln553_reg_2354));
end

always @ * begin
    ap_predicate_op269_store_state2 = ((sel_curBuf_fu_208 == 1'd1) & (1'd0 == and_ln553_reg_2354));
end

always @ * begin
    ap_predicate_op270_store_state2 = ((sel_curBuf_fu_208 == 1'd1) & (1'd0 == and_ln553_reg_2354));
end

assign compRegs_memPC0_extra_flag_address0 = zext_ln600_1_fu_1680_p1;

assign compRegs_memPC0_extra_flag_address1 = zext_ln547_fu_1117_p1;

assign compRegs_memPC0_index_address0 = zext_ln600_2_fu_1690_p1;

assign compRegs_memPC0_index_address1 = zext_ln547_1_fu_1128_p1;

assign compRegs_memPC0_last_address0 = zext_ln600_3_fu_1700_p1;

assign compRegs_memPC0_last_address1 = zext_ln547_2_fu_1139_p1;

assign compRegs_memPC0_value_address0 = zext_ln600_4_fu_1710_p1;

assign compRegs_memPC0_value_address1 = zext_ln547_3_fu_1150_p1;

assign compRegs_memPC1_extra_flag_address0 = zext_ln600_5_fu_1720_p1;

assign compRegs_memPC1_extra_flag_address1 = zext_ln547_4_fu_1161_p1;

assign compRegs_memPC1_index_address0 = zext_ln600_6_fu_1730_p1;

assign compRegs_memPC1_index_address1 = zext_ln547_5_fu_1172_p1;

assign compRegs_memPC1_last_address0 = zext_ln600_7_fu_1740_p1;

assign compRegs_memPC1_last_address1 = zext_ln547_6_fu_1183_p1;

assign compRegs_memPC1_value_address0 = zext_ln600_8_fu_1750_p1;

assign compRegs_memPC1_value_address1 = zext_ln547_7_fu_1194_p1;

assign comp_data_out_address0 = zext_ln600_fu_1670_p1;

assign comp_data_out_d0 = {{{and_ln546_fu_1611_p2}, {result_index_3_fu_1619_p3}}, {result_value_5_fu_1629_p3}};

assign curBuf_write_1_out = curBuf_write_1_fu_228;

assign curBuf_write_2_fu_1775_p2 = (curBuf_write_1_fu_228 + 8'd1);

assign curBuf_write_3_fu_1781_p3 = ((icmp_ln602_fu_1769_p2[0:0] == 1'b1) ? curBuf_write_2_fu_1775_p2 : curBuf_write_1_fu_228);

assign empty_102_fu_1362_p3 = ((sel_reBuf_fu_212[0:0] == 1'b1) ? compRegs_memPC1_last_q1 : compRegs_memPC0_last_q1);

assign empty_103_fu_1370_p3 = ((sel_reBuf_fu_212[0:0] == 1'b1) ? compRegs_memPC1_value_q1 : compRegs_memPC0_value_q1);

assign empty_104_fu_1378_p3 = ((sel_reBuf_fu_212[0:0] == 1'b1) ? compRegs_memPC1_index_q1 : compRegs_memPC0_index_q1);

assign icmp_ln529_fu_1029_p2 = ((ap_sig_allocacmp_j_5 == 6'd42) ? 1'b1 : 1'b0);

assign icmp_ln546_fu_1105_p2 = ((ap_sig_allocacmp_reBuf_write_1_load_1 == ap_sig_allocacmp_reBuf_read_4) ? 1'b1 : 1'b0);

assign icmp_ln550_fu_1199_p2 = ((ap_sig_allocacmp_reBuf_read_4 < 8'd41) ? 1'b1 : 1'b0);

assign icmp_ln555_fu_1432_p2 = ((val1_index_3_fu_1334_p3 == val2_index_2_fu_1408_p3) ? 1'b1 : 1'b0);

assign icmp_ln565_1_fu_1583_p2 = ((val1_index_3_fu_1334_p3 < val2_index_2_fu_1408_p3) ? 1'b1 : 1'b0);

assign icmp_ln565_fu_1490_p2 = ((val2_index_2_fu_1408_p3 < val1_index_3_fu_1334_p3) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1251_p2 = ((reBuf_read_9_fu_1237_p3 == ap_sig_allocacmp_reBuf_write_1_load_1) ? 1'b1 : 1'b0);

assign icmp_ln602_fu_1769_p2 = ((curBuf_write_1_fu_228 < 8'd41) ? 1'b1 : 1'b0);

assign lastA_1_out = lastA_1_fu_184;

assign lastA_2_fu_1310_p2 = (lastA_1_fu_184 | force_finish);

assign lastA_5_fu_1348_p3 = ((or_ln534_1_reg_2254[0:0] == 1'b1) ? lastA_2_fu_1310_p2 : tmp_mult_out_elems_extra_flag_q0);

assign mul_ln547_1_cast_fu_909_p1 = mul_ln547_1;

assign mul_ln547_2_cast_fu_913_p1 = mul_ln547_2;

assign mul_ln547_3_cast_fu_905_p1 = mul_ln547_3;

assign mul_ln547_4_cast_fu_933_p1 = mul_ln547_4;

assign mul_ln547_5_cast_fu_925_p1 = mul_ln547_5;

assign mul_ln547_6_cast_fu_929_p1 = mul_ln547_6;

assign mul_ln547_7_cast_fu_921_p1 = mul_ln547_7;

assign mul_ln547_cast_fu_917_p1 = mul_ln547;

assign mult_ptr_1_fu_1085_p2 = (ap_sig_allocacmp_mult_ptr_load + 8'd1);

assign mult_ptr_2_fu_1097_p3 = ((or_ln534_1_fu_1071_p2[0:0] == 1'b1) ? ap_sig_allocacmp_mult_ptr_load : mult_ptr_1_fu_1085_p2);

assign or_ln534_1_fu_1071_p2 = (xor_ln534_fu_1059_p2 | or_ln534_fu_1065_p2);

assign or_ln534_fu_1065_p2 = (ap_phi_mux_switch_cond1_1_phi_fu_825_p4 | ap_phi_mux_stream_last_phi_fu_814_p4);

assign or_ln546_1_fu_1601_p2 = (val2_none_2_reg_2341 | and_ln565_fu_1595_p2);

assign or_ln546_2_fu_1606_p2 = (val1_none_2_reg_2284 | or_ln546_1_fu_1601_p2);

assign or_ln546_3_fu_1644_p2 = (switch_cond2_1_fu_188 | and_ln546_1_fu_1639_p2);

assign or_ln546_4_fu_1664_p2 = (xor_ln546_fu_1658_p2 | or_ln565_fu_1502_p2);

assign or_ln546_fu_1225_p2 = (sel_tmp_fu_1219_p2 | icmp_ln546_fu_1105_p2);

assign or_ln555_1_fu_1557_p2 = (xor_ln555_1_fu_1551_p2 | val2_last_2_fu_1401_p3);

assign or_ln555_2_fu_1563_p2 = (or_ln555_fu_1428_p2 | or_ln555_1_fu_1557_p2);

assign or_ln555_fu_1428_p2 = (val2_none_2_reg_2341 | val1_none_2_reg_2284);

assign or_ln565_1_fu_1514_p2 = (xor_ln565_fu_1508_p2 | val1_none_2_reg_2284);

assign or_ln565_fu_1502_p2 = (xor_ln565_1_fu_1496_p2 | or_ln555_fu_1428_p2);

assign or_ln584_fu_1472_p2 = (switch_cond1_1_reg_822 | and_ln584_1_fu_1467_p2);

assign or_ln588_fu_1944_p2 = (tmp_output_valid_fu_216 | and_ln588_fu_1932_p2);

assign reBuf_read_10_fu_1875_p3 = ((icmp_ln585_reg_2358[0:0] == 1'b1) ? 8'd0 : reBuf_read_9_reg_2347);

assign reBuf_read_1_out = reBuf_read_1_fu_232;

assign reBuf_read_7_fu_1205_p2 = (ap_sig_allocacmp_reBuf_read_4 + 8'd1);

assign reBuf_read_8_fu_1211_p3 = ((icmp_ln550_fu_1199_p2[0:0] == 1'b1) ? reBuf_read_7_fu_1205_p2 : ap_sig_allocacmp_reBuf_read_4);

assign reBuf_read_9_fu_1237_p3 = ((or_ln546_fu_1225_p2[0:0] == 1'b1) ? ap_sig_allocacmp_reBuf_read_4 : reBuf_read_8_fu_1211_p3);

assign reBuf_write_1_out = reBuf_write_1_fu_224;

assign reBuf_write_2_fu_1868_p3 = ((icmp_ln585_reg_2358[0:0] == 1'b1) ? 8'd0 : reBuf_write_1_fu_224);

assign result_index_2_fu_1543_p3 = ((or_ln565_1_fu_1514_p2[0:0] == 1'b1) ? val2_index_2_fu_1408_p3 : val1_index_3_fu_1334_p3);

assign result_index_3_fu_1619_p3 = ((or_ln546_2_fu_1606_p2[0:0] == 1'b1) ? result_index_2_fu_1543_p3 : val1_index_3_fu_1334_p3);

assign result_last_1_fu_1462_p2 = (val2_last_2_fu_1401_p3 & val1_none_2_reg_2284);

assign result_last_2_fu_1575_p3 = ((or_ln565_1_fu_1514_p2[0:0] == 1'b1) ? result_last_1_fu_1462_p2 : result_last_fu_1569_p2);

assign result_last_fu_1569_p2 = (val1_last_2_fu_1327_p3 & or_ln555_2_fu_1563_p2);

assign result_value_3_fu_1527_p3 = ((and_ln555_fu_1484_p2[0:0] == 1'b1) ? result_value_fu_1438_p2 : val1_value_3_fu_1341_p3);

assign result_value_4_fu_1535_p3 = ((or_ln565_1_fu_1514_p2[0:0] == 1'b1) ? val2_value_2_fu_1415_p3 : result_value_3_fu_1527_p3);

assign result_value_5_fu_1629_p3 = ((or_ln546_2_fu_1606_p2[0:0] == 1'b1) ? result_value_4_fu_1535_p3 : val1_value_3_fu_1341_p3);

assign result_value_fu_1438_p2 = (val2_value_2_fu_1415_p3 + val1_value_3_fu_1341_p3);

assign sel_curBuf_1_fu_1856_p2 = (sel_curBuf_fu_208 ^ 1'd1);

assign sel_curBuf_out = sel_curBuf_fu_208;

assign sel_reBuf_1_fu_1862_p2 = (sel_reBuf_fu_212 ^ 1'd1);

assign sel_reBuf_out = sel_reBuf_fu_212;

assign sel_tmp_fu_1219_p2 = (ap_sig_allocacmp_val2_none_1_load ^ 1'd1);

assign select_ln546_6_fu_1650_p3 = ((or_ln546_2_fu_1606_p2[0:0] == 1'b1) ? select_ln565_fu_1519_p3 : switch_cond1_2_fu_1456_p2);

assign select_ln565_fu_1519_p3 = ((or_ln565_1_fu_1514_p2[0:0] == 1'b1) ? or_ln584_fu_1472_p2 : switch_cond1_2_fu_1456_p2);

assign select_ln588_fu_1950_p3 = ((and_ln588_fu_1932_p2[0:0] == 1'b1) ? tmp_writeback_stream_empty_1_fu_1938_p2 : tmp_writeback_stream_empty_fu_220);

assign stream_last_1_fu_1315_p2 = (stream_last_reg_811 | force_finish);

assign stream_last_4_fu_1355_p3 = ((or_ln534_1_reg_2254[0:0] == 1'b1) ? stream_last_1_fu_1315_p2 : tmp_mult_out_elems_last_q0);

assign switch_cond1_1_out = switch_cond1_1_reg_822;

assign switch_cond1_2_fu_1456_p2 = (switch_cond1_1_reg_822 | and_ln584_fu_1450_p2);

assign switch_cond2_1_out = switch_cond2_1_fu_188;

assign tmp_mult_out_elems_extra_flag_address0 = zext_ln535_fu_1077_p1;

assign tmp_mult_out_elems_index_address0 = zext_ln535_fu_1077_p1;

assign tmp_mult_out_elems_last_address0 = zext_ln535_fu_1077_p1;

assign tmp_mult_out_elems_value_address0 = zext_ln535_fu_1077_p1;

assign tmp_output_valid_out = tmp_output_valid_fu_216;

assign tmp_writeback_stream_empty_1_fu_1938_p2 = ((curBuf_write_1_fu_228 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_writeback_stream_empty_out = tmp_writeback_stream_empty_fu_220;

assign val1_extra_flag_2_fu_1320_p3 = ((or_ln534_1_reg_2254[0:0] == 1'b1) ? val1_extra_flag_reg_846 : tmp_mult_out_elems_extra_flag_q0);

assign val1_extra_flag_out = val1_extra_flag_reg_846;

assign val1_index_3_fu_1334_p3 = ((or_ln534_1_reg_2254[0:0] == 1'b1) ? val1_index_fu_176 : tmp_mult_out_elems_index_q0);

assign val1_index_out = val1_index_fu_176;

assign val1_last_2_fu_1327_p3 = ((or_ln534_1_reg_2254[0:0] == 1'b1) ? val1_last_reg_834 : tmp_mult_out_elems_last_q0);

assign val1_last_out = val1_last_reg_834;

assign val1_none_1_out = val1_none_1_fu_196;

assign val1_none_2_fu_1091_p2 = (or_ln534_1_fu_1071_p2 & ap_sig_allocacmp_val1_none_1_load);

assign val1_value_3_fu_1341_p3 = ((or_ln534_1_reg_2254[0:0] == 1'b1) ? val1_value_fu_180 : tmp_mult_out_elems_value_q0);

assign val1_value_out = val1_value_fu_180;

assign val2_extra_flag_1_fu_1386_p3 = ((sel_reBuf_fu_212[0:0] == 1'b1) ? compRegs_memPC1_extra_flag_q1 : compRegs_memPC0_extra_flag_q1);

assign val2_extra_flag_2_fu_1394_p3 = ((or_ln546_reg_2333[0:0] == 1'b1) ? val2_extra_flag_reg_870 : val2_extra_flag_1_fu_1386_p3);

assign val2_extra_flag_out = val2_extra_flag_reg_870;

assign val2_index_2_fu_1408_p3 = ((or_ln546_reg_2333[0:0] == 1'b1) ? val2_index_fu_168 : empty_104_fu_1378_p3);

assign val2_index_out = val2_index_fu_168;

assign val2_last_2_fu_1401_p3 = ((or_ln546_reg_2333[0:0] == 1'b1) ? val2_last_reg_858 : empty_102_fu_1362_p3);

assign val2_last_out = val2_last_reg_858;

assign val2_none_1_out = val2_none_1_fu_192;

assign val2_none_2_fu_1231_p2 = (icmp_ln546_fu_1105_p2 & ap_sig_allocacmp_val2_none_1_load);

assign val2_value_2_fu_1415_p3 = ((or_ln546_reg_2333[0:0] == 1'b1) ? val2_value_fu_172 : empty_103_fu_1370_p3);

assign val2_value_out = val2_value_fu_172;

assign xor_ln534_fu_1059_p2 = (1'd1 ^ and_ln534_fu_1053_p2);

assign xor_ln546_fu_1658_p2 = (or_ln546_2_fu_1606_p2 ^ 1'd1);

assign xor_ln555_1_fu_1551_p2 = (icmp_ln555_fu_1432_p2 ^ 1'd1);

assign xor_ln555_fu_1478_p2 = (or_ln555_fu_1428_p2 ^ 1'd1);

assign xor_ln565_1_fu_1496_p2 = (icmp_ln565_fu_1490_p2 ^ 1'd1);

assign xor_ln565_2_fu_1589_p2 = (icmp_ln565_1_fu_1583_p2 ^ 1'd1);

assign xor_ln565_fu_1508_p2 = (or_ln565_fu_1502_p2 ^ 1'd1);

assign xor_ln584_fu_1444_p2 = (lastA_5_fu_1348_p3 ^ 1'd1);

assign zext_ln535_fu_1077_p1 = ap_sig_allocacmp_mult_ptr_load;

assign zext_ln547_1_fu_1128_p1 = add_ln547_1_fu_1122_p2;

assign zext_ln547_2_fu_1139_p1 = add_ln547_2_fu_1133_p2;

assign zext_ln547_3_fu_1150_p1 = add_ln547_3_fu_1144_p2;

assign zext_ln547_4_fu_1161_p1 = add_ln547_4_fu_1155_p2;

assign zext_ln547_5_fu_1172_p1 = add_ln547_5_fu_1166_p2;

assign zext_ln547_6_fu_1183_p1 = add_ln547_6_fu_1177_p2;

assign zext_ln547_7_fu_1194_p1 = add_ln547_7_fu_1188_p2;

assign zext_ln547_fu_1117_p1 = add_ln547_fu_1111_p2;

assign zext_ln600_1_fu_1680_p1 = add_ln600_fu_1675_p2;

assign zext_ln600_2_fu_1690_p1 = add_ln600_1_fu_1685_p2;

assign zext_ln600_3_fu_1700_p1 = add_ln600_2_fu_1695_p2;

assign zext_ln600_4_fu_1710_p1 = add_ln600_3_fu_1705_p2;

assign zext_ln600_5_fu_1720_p1 = add_ln600_4_fu_1715_p2;

assign zext_ln600_6_fu_1730_p1 = add_ln600_5_fu_1725_p2;

assign zext_ln600_7_fu_1740_p1 = add_ln600_6_fu_1735_p2;

assign zext_ln600_8_fu_1750_p1 = add_ln600_7_fu_1745_p2;

assign zext_ln600_fu_1670_p1 = curBuf_write_1_fu_228;

always @ (posedge ap_clk) begin
    mul_ln547_3_cast_reg_2210[7] <= 1'b0;
    mul_ln547_1_cast_reg_2215[7] <= 1'b0;
    mul_ln547_2_cast_reg_2220[7] <= 1'b0;
    mul_ln547_cast_reg_2225[7] <= 1'b0;
    mul_ln547_7_cast_reg_2230[7] <= 1'b0;
    mul_ln547_5_cast_reg_2235[7] <= 1'b0;
    mul_ln547_6_cast_reg_2240[7] <= 1'b0;
    mul_ln547_4_cast_reg_2245[7] <= 1'b0;
end

endmodule //system_top_compare_Pipeline_COMP_OUT_LOOP
