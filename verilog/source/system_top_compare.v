// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_compare (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        init,
        force_finish,
        mult_out_valid,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        p_read32,
        p_read33,
        p_read34,
        p_read35,
        p_read36,
        p_read37,
        p_read38,
        p_read39,
        p_read40,
        p_read41,
        p_read42,
        p_read43,
        p_read44,
        p_read45,
        p_read46,
        p_read47,
        p_read48,
        p_read49,
        p_read50,
        p_read51,
        p_read52,
        p_read53,
        p_read54,
        p_read55,
        p_read56,
        p_read57,
        p_read58,
        p_read59,
        p_read60,
        p_read61,
        p_read62,
        p_read63,
        p_read64,
        p_read65,
        p_read66,
        p_read67,
        p_read68,
        p_read69,
        p_read70,
        p_read71,
        p_read72,
        p_read73,
        p_read74,
        p_read75,
        p_read76,
        p_read77,
        p_read78,
        p_read79,
        p_read80,
        p_read81,
        p_read82,
        p_read83,
        p_read84,
        p_read85,
        p_read86,
        p_read87,
        p_read88,
        p_read89,
        p_read90,
        p_read91,
        p_read92,
        p_read93,
        p_read94,
        p_read95,
        p_read96,
        p_read97,
        p_read98,
        p_read99,
        p_read100,
        p_read101,
        p_read102,
        p_read103,
        p_read104,
        p_read105,
        p_read106,
        p_read107,
        p_read108,
        p_read109,
        p_read110,
        p_read111,
        p_read112,
        p_read113,
        p_read114,
        p_read115,
        p_read116,
        p_read117,
        p_read118,
        p_read119,
        p_read120,
        p_read121,
        p_read122,
        p_read123,
        p_read124,
        p_read125,
        p_read126,
        p_read127,
        p_read128,
        p_read129,
        p_read130,
        p_read131,
        p_read132,
        p_read133,
        p_read134,
        p_read135,
        p_read136,
        p_read137,
        p_read138,
        p_read139,
        p_read140,
        p_read141,
        p_read142,
        p_read143,
        p_read144,
        p_read145,
        p_read146,
        p_read147,
        p_read148,
        p_read149,
        p_read150,
        p_read151,
        p_read152,
        p_read153,
        p_read154,
        p_read155,
        p_read156,
        p_read157,
        p_read158,
        p_read159,
        p_read160,
        p_read161,
        p_read162,
        p_read163,
        p_read164,
        compRegs_0_0_offset,
        compRegs_0_1_offset,
        compRegs_0_2_offset,
        compRegs_0_3_offset,
        compRegs_1_0_offset,
        compRegs_1_1_offset,
        compRegs_1_2_offset,
        compRegs_1_3_offset,
        compRegs_2_0_read,
        compRegs_2_1_read,
        compRegs_2_2_read,
        compRegs_2_3_read,
        compRegs_3_0_read,
        compRegs_3_1_read,
        compRegs_3_2_read,
        compRegs_3_3_read,
        compRegs_4_read,
        compRegs_5_read,
        compRegs_6_read,
        compRegs_7_read,
        compRegs_8_read,
        compRegs_9_read,
        compRegs_10_read,
        compRegs_11_read,
        compRegs_12_read,
        compRegs_13_read,
        compRegs_14_read,
        comp_data_out_address0,
        comp_data_out_ce0,
        comp_data_out_we0,
        comp_data_out_d0,
        comp_out_valid,
        comp_out_valid_ap_vld,
        comp_out_empty,
        comp_out_empty_ap_vld,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] init;
input  [0:0] force_finish;
input  [0:0] mult_out_valid;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
input  [7:0] p_read16;
input  [7:0] p_read17;
input  [7:0] p_read18;
input  [7:0] p_read19;
input  [7:0] p_read20;
input  [7:0] p_read21;
input  [7:0] p_read22;
input  [7:0] p_read23;
input  [7:0] p_read24;
input  [7:0] p_read25;
input  [7:0] p_read26;
input  [7:0] p_read27;
input  [7:0] p_read28;
input  [7:0] p_read29;
input  [7:0] p_read30;
input  [7:0] p_read31;
input  [7:0] p_read32;
input  [7:0] p_read33;
input  [7:0] p_read34;
input  [7:0] p_read35;
input  [7:0] p_read36;
input  [7:0] p_read37;
input  [7:0] p_read38;
input  [7:0] p_read39;
input  [7:0] p_read40;
input  [7:0] p_read41;
input  [7:0] p_read42;
input  [7:0] p_read43;
input  [7:0] p_read44;
input  [7:0] p_read45;
input  [7:0] p_read46;
input  [7:0] p_read47;
input  [7:0] p_read48;
input  [7:0] p_read49;
input  [7:0] p_read50;
input  [7:0] p_read51;
input  [7:0] p_read52;
input  [7:0] p_read53;
input  [7:0] p_read54;
input  [7:0] p_read55;
input  [7:0] p_read56;
input  [7:0] p_read57;
input  [7:0] p_read58;
input  [7:0] p_read59;
input  [7:0] p_read60;
input  [7:0] p_read61;
input  [7:0] p_read62;
input  [7:0] p_read63;
input  [7:0] p_read64;
input  [7:0] p_read65;
input  [7:0] p_read66;
input  [7:0] p_read67;
input  [7:0] p_read68;
input  [7:0] p_read69;
input  [7:0] p_read70;
input  [7:0] p_read71;
input  [7:0] p_read72;
input  [7:0] p_read73;
input  [7:0] p_read74;
input  [7:0] p_read75;
input  [7:0] p_read76;
input  [7:0] p_read77;
input  [7:0] p_read78;
input  [7:0] p_read79;
input  [7:0] p_read80;
input  [7:0] p_read81;
input  [7:0] p_read82;
input  [0:0] p_read83;
input  [0:0] p_read84;
input  [0:0] p_read85;
input  [0:0] p_read86;
input  [0:0] p_read87;
input  [0:0] p_read88;
input  [0:0] p_read89;
input  [0:0] p_read90;
input  [0:0] p_read91;
input  [0:0] p_read92;
input  [0:0] p_read93;
input  [0:0] p_read94;
input  [0:0] p_read95;
input  [0:0] p_read96;
input  [0:0] p_read97;
input  [0:0] p_read98;
input  [0:0] p_read99;
input  [0:0] p_read100;
input  [0:0] p_read101;
input  [0:0] p_read102;
input  [0:0] p_read103;
input  [0:0] p_read104;
input  [0:0] p_read105;
input  [0:0] p_read106;
input  [0:0] p_read107;
input  [0:0] p_read108;
input  [0:0] p_read109;
input  [0:0] p_read110;
input  [0:0] p_read111;
input  [0:0] p_read112;
input  [0:0] p_read113;
input  [0:0] p_read114;
input  [0:0] p_read115;
input  [0:0] p_read116;
input  [0:0] p_read117;
input  [0:0] p_read118;
input  [0:0] p_read119;
input  [0:0] p_read120;
input  [0:0] p_read121;
input  [0:0] p_read122;
input  [0:0] p_read123;
input  [0:0] p_read124;
input  [0:0] p_read125;
input  [0:0] p_read126;
input  [0:0] p_read127;
input  [0:0] p_read128;
input  [0:0] p_read129;
input  [0:0] p_read130;
input  [0:0] p_read131;
input  [0:0] p_read132;
input  [0:0] p_read133;
input  [0:0] p_read134;
input  [0:0] p_read135;
input  [0:0] p_read136;
input  [0:0] p_read137;
input  [0:0] p_read138;
input  [0:0] p_read139;
input  [0:0] p_read140;
input  [0:0] p_read141;
input  [0:0] p_read142;
input  [0:0] p_read143;
input  [0:0] p_read144;
input  [0:0] p_read145;
input  [0:0] p_read146;
input  [0:0] p_read147;
input  [0:0] p_read148;
input  [0:0] p_read149;
input  [0:0] p_read150;
input  [0:0] p_read151;
input  [0:0] p_read152;
input  [0:0] p_read153;
input  [0:0] p_read154;
input  [0:0] p_read155;
input  [0:0] p_read156;
input  [0:0] p_read157;
input  [0:0] p_read158;
input  [0:0] p_read159;
input  [0:0] p_read160;
input  [0:0] p_read161;
input  [0:0] p_read162;
input  [0:0] p_read163;
input  [0:0] p_read164;
input  [1:0] compRegs_0_0_offset;
input  [1:0] compRegs_0_1_offset;
input  [1:0] compRegs_0_2_offset;
input  [1:0] compRegs_0_3_offset;
input  [1:0] compRegs_1_0_offset;
input  [1:0] compRegs_1_1_offset;
input  [1:0] compRegs_1_2_offset;
input  [1:0] compRegs_1_3_offset;
input  [7:0] compRegs_2_0_read;
input  [7:0] compRegs_2_1_read;
input   compRegs_2_2_read;
input   compRegs_2_3_read;
input  [7:0] compRegs_3_0_read;
input  [7:0] compRegs_3_1_read;
input   compRegs_3_2_read;
input   compRegs_3_3_read;
input  [7:0] compRegs_4_read;
input  [7:0] compRegs_5_read;
input  [7:0] compRegs_6_read;
input  [7:0] compRegs_7_read;
input  [0:0] compRegs_8_read;
input  [0:0] compRegs_9_read;
input  [0:0] compRegs_10_read;
input  [0:0] compRegs_11_read;
input  [0:0] compRegs_12_read;
input  [0:0] compRegs_13_read;
input  [0:0] compRegs_14_read;
output  [5:0] comp_data_out_address0;
output   comp_data_out_ce0;
output   comp_data_out_we0;
output  [16:0] comp_data_out_d0;
output  [0:0] comp_out_valid;
output   comp_out_valid_ap_vld;
output  [0:0] comp_out_empty;
output   comp_out_empty_ap_vld;
output  [0:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [0:0] ap_return_3;
output  [0:0] ap_return_4;
output  [7:0] ap_return_5;
output  [7:0] ap_return_6;
output  [0:0] ap_return_7;
output  [0:0] ap_return_8;
output  [7:0] ap_return_9;
output  [7:0] ap_return_10;
output  [7:0] ap_return_11;
output  [7:0] ap_return_12;
output  [0:0] ap_return_13;
output  [0:0] ap_return_14;
output  [0:0] ap_return_15;
output  [0:0] ap_return_16;
output  [0:0] ap_return_17;
output  [0:0] ap_return_18;
output  [0:0] ap_return_19;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg comp_out_valid_ap_vld;
reg comp_out_empty_ap_vld;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state22;
wire   [6:0] mul_ln600_fu_3376_p2;
reg   [6:0] mul_ln600_reg_3966;
wire   [6:0] mul_ln600_1_fu_3387_p2;
reg   [6:0] mul_ln600_1_reg_3971;
wire   [6:0] mul_ln600_2_fu_3398_p2;
reg   [6:0] mul_ln600_2_reg_3976;
wire   [6:0] mul_ln600_3_fu_3409_p2;
reg   [6:0] mul_ln600_3_reg_3981;
wire   [6:0] mul_ln600_4_fu_3420_p2;
reg   [6:0] mul_ln600_4_reg_3986;
wire   [6:0] mul_ln600_5_fu_3431_p2;
reg   [6:0] mul_ln600_5_reg_3991;
wire   [6:0] mul_ln600_6_fu_3442_p2;
reg   [6:0] mul_ln600_6_reg_3996;
wire   [6:0] mul_ln600_7_fu_3453_p2;
reg   [6:0] mul_ln600_7_reg_4001;
wire   [0:0] val1_none_fu_3460_p2;
reg   [0:0] val1_none_reg_4006;
wire   [0:0] val2_none_fu_3467_p2;
reg   [0:0] val2_none_reg_4011;
wire   [0:0] switch_cond1_fu_3480_p2;
reg   [0:0] switch_cond1_reg_4016;
wire   [0:0] switch_cond2_fu_3487_p2;
reg   [0:0] switch_cond2_reg_4021;
wire   [0:0] lastA_fu_3494_p2;
reg   [0:0] lastA_reg_4026;
wire   [0:0] sel_curBuf_fu_3501_p2;
reg   [0:0] sel_curBuf_reg_4031;
wire   [0:0] sel_reBuf_fu_3508_p2;
reg   [0:0] sel_reBuf_reg_4040;
wire   [7:0] buf0_read_fu_3523_p3;
reg   [7:0] buf0_read_reg_4045;
wire   [7:0] buf1_read_fu_3539_p3;
reg   [7:0] buf1_read_reg_4050;
wire   [7:0] curBuf_write_fu_3547_p3;
reg   [7:0] curBuf_write_reg_4055;
wire   [7:0] reBuf_write_fu_3556_p3;
reg   [7:0] reBuf_write_reg_4060;
wire   [7:0] reBuf_read_fu_3565_p3;
reg   [7:0] reBuf_read_reg_4065;
reg   [5:0] tmp_mult_out_elems_value_address0;
reg    tmp_mult_out_elems_value_ce0;
reg    tmp_mult_out_elems_value_we0;
reg   [7:0] tmp_mult_out_elems_value_d0;
wire   [7:0] tmp_mult_out_elems_value_q0;
reg   [5:0] tmp_mult_out_elems_value_address1;
reg    tmp_mult_out_elems_value_ce1;
reg    tmp_mult_out_elems_value_we1;
reg   [7:0] tmp_mult_out_elems_value_d1;
reg   [5:0] tmp_mult_out_elems_index_address0;
reg    tmp_mult_out_elems_index_ce0;
reg    tmp_mult_out_elems_index_we0;
reg   [7:0] tmp_mult_out_elems_index_d0;
wire   [7:0] tmp_mult_out_elems_index_q0;
reg   [5:0] tmp_mult_out_elems_index_address1;
reg    tmp_mult_out_elems_index_ce1;
reg    tmp_mult_out_elems_index_we1;
reg   [7:0] tmp_mult_out_elems_index_d1;
reg   [5:0] tmp_mult_out_elems_last_address0;
reg    tmp_mult_out_elems_last_ce0;
reg    tmp_mult_out_elems_last_we0;
reg   [0:0] tmp_mult_out_elems_last_d0;
wire   [0:0] tmp_mult_out_elems_last_q0;
reg   [5:0] tmp_mult_out_elems_last_address1;
reg    tmp_mult_out_elems_last_ce1;
reg    tmp_mult_out_elems_last_we1;
reg   [0:0] tmp_mult_out_elems_last_d1;
reg   [5:0] tmp_mult_out_elems_extra_flag_address0;
reg    tmp_mult_out_elems_extra_flag_ce0;
reg    tmp_mult_out_elems_extra_flag_we0;
reg   [0:0] tmp_mult_out_elems_extra_flag_d0;
wire   [0:0] tmp_mult_out_elems_extra_flag_q0;
reg   [5:0] tmp_mult_out_elems_extra_flag_address1;
reg    tmp_mult_out_elems_extra_flag_ce1;
reg    tmp_mult_out_elems_extra_flag_we1;
reg   [0:0] tmp_mult_out_elems_extra_flag_d1;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_start;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_done;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_idle;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_ready;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_2_2_read;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_2_3_read;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_3_2_read;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_3_3_read;
wire   [5:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_value_address0;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_value_ce0;
wire   [5:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_index_address0;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_index_ce0;
wire   [5:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_last_address0;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_last_ce0;
wire   [5:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_extra_flag_address0;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_extra_flag_ce0;
wire   [7:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_read_1_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_read_1_out_ap_vld;
wire   [7:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_write_1_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_write_1_out_ap_vld;
wire   [7:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_curBuf_write_1_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_curBuf_write_1_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_writeback_stream_empty_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_writeback_stream_empty_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_output_valid_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_output_valid_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_sel_reBuf_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_sel_reBuf_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_sel_curBuf_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_sel_curBuf_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_none_1_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_none_1_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_none_1_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_none_1_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_switch_cond1_1_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_switch_cond1_1_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_switch_cond2_1_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_switch_cond2_1_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_lastA_1_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_lastA_1_out_ap_vld;
wire   [7:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_value_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_value_out_ap_vld;
wire   [7:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_index_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_index_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_last_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_last_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_extra_flag_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_extra_flag_out_ap_vld;
wire   [7:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_value_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_value_out_ap_vld;
wire   [7:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_index_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_index_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_last_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_last_out_ap_vld;
wire   [0:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_extra_flag_out;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_extra_flag_out_ap_vld;
wire   [5:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_address0;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_ce0;
wire    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_we0;
wire   [16:0] grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_d0;
reg    grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_start_reg;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state24;
wire   [1:0] mul_ln600_fu_3376_p0;
wire   [1:0] mul_ln600_1_fu_3387_p0;
wire   [1:0] mul_ln600_2_fu_3398_p0;
wire   [1:0] mul_ln600_3_fu_3409_p0;
wire   [1:0] mul_ln600_4_fu_3420_p0;
wire   [1:0] mul_ln600_5_fu_3431_p0;
wire   [1:0] mul_ln600_6_fu_3442_p0;
wire   [1:0] mul_ln600_7_fu_3453_p0;
wire   [0:0] xor_ln506_fu_3474_p2;
wire   [7:0] buf1_write_fu_3531_p3;
wire   [7:0] buf0_write_fu_3515_p3;
wire   [7:0] select_ln616_fu_3634_p3;
wire   [7:0] select_ln617_fu_3641_p3;
wire   [7:0] select_ln618_fu_3647_p3;
wire   [7:0] select_ln619_fu_3654_p3;
reg   [23:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire   [6:0] mul_ln600_1_fu_3387_p00;
wire   [6:0] mul_ln600_2_fu_3398_p00;
wire   [6:0] mul_ln600_3_fu_3409_p00;
wire   [6:0] mul_ln600_4_fu_3420_p00;
wire   [6:0] mul_ln600_5_fu_3431_p00;
wire   [6:0] mul_ln600_6_fu_3442_p00;
wire   [6:0] mul_ln600_7_fu_3453_p00;
wire   [6:0] mul_ln600_fu_3376_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_start_reg = 1'b0;
end

system_top_update_agg_tmp_0_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 41 ),
    .AddressWidth( 6 ))
tmp_mult_out_elems_value_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_mult_out_elems_value_address0),
    .ce0(tmp_mult_out_elems_value_ce0),
    .we0(tmp_mult_out_elems_value_we0),
    .d0(tmp_mult_out_elems_value_d0),
    .q0(tmp_mult_out_elems_value_q0),
    .address1(tmp_mult_out_elems_value_address1),
    .ce1(tmp_mult_out_elems_value_ce1),
    .we1(tmp_mult_out_elems_value_we1),
    .d1(tmp_mult_out_elems_value_d1)
);

system_top_update_agg_tmp_0_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 41 ),
    .AddressWidth( 6 ))
tmp_mult_out_elems_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_mult_out_elems_index_address0),
    .ce0(tmp_mult_out_elems_index_ce0),
    .we0(tmp_mult_out_elems_index_we0),
    .d0(tmp_mult_out_elems_index_d0),
    .q0(tmp_mult_out_elems_index_q0),
    .address1(tmp_mult_out_elems_index_address1),
    .ce1(tmp_mult_out_elems_index_ce1),
    .we1(tmp_mult_out_elems_index_we1),
    .d1(tmp_mult_out_elems_index_d1)
);

system_top_update_agg_tmp_2_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 41 ),
    .AddressWidth( 6 ))
tmp_mult_out_elems_last_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_mult_out_elems_last_address0),
    .ce0(tmp_mult_out_elems_last_ce0),
    .we0(tmp_mult_out_elems_last_we0),
    .d0(tmp_mult_out_elems_last_d0),
    .q0(tmp_mult_out_elems_last_q0),
    .address1(tmp_mult_out_elems_last_address1),
    .ce1(tmp_mult_out_elems_last_ce1),
    .we1(tmp_mult_out_elems_last_we1),
    .d1(tmp_mult_out_elems_last_d1)
);

system_top_update_agg_tmp_2_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 41 ),
    .AddressWidth( 6 ))
tmp_mult_out_elems_extra_flag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_mult_out_elems_extra_flag_address0),
    .ce0(tmp_mult_out_elems_extra_flag_ce0),
    .we0(tmp_mult_out_elems_extra_flag_we0),
    .d0(tmp_mult_out_elems_extra_flag_d0),
    .q0(tmp_mult_out_elems_extra_flag_q0),
    .address1(tmp_mult_out_elems_extra_flag_address1),
    .ce1(tmp_mult_out_elems_extra_flag_ce1),
    .we1(tmp_mult_out_elems_extra_flag_we1),
    .d1(tmp_mult_out_elems_extra_flag_d1)
);

system_top_compare_Pipeline_COMP_OUT_LOOP grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_start),
    .ap_done(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_done),
    .ap_idle(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_idle),
    .ap_ready(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_ready),
    .reBuf_read(reBuf_read_reg_4065),
    .reBuf_write(reBuf_write_reg_4060),
    .curBuf_write(curBuf_write_reg_4055),
    .sel_reBuf_4(sel_reBuf_reg_4040),
    .sel_curBuf_4(sel_curBuf_reg_4031),
    .val1_none(val1_none_reg_4006),
    .val2_none(val2_none_reg_4011),
    .switch_cond1(switch_cond1_reg_4016),
    .switch_cond2(switch_cond2_reg_4021),
    .lastA(lastA_reg_4026),
    .compRegs_2_0_read(compRegs_2_0_read),
    .compRegs_2_1_read(compRegs_2_1_read),
    .compRegs_2_2_read(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_2_2_read),
    .compRegs_2_3_read(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_2_3_read),
    .compRegs_3_0_read(compRegs_3_0_read),
    .compRegs_3_1_read(compRegs_3_1_read),
    .compRegs_3_2_read(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_3_2_read),
    .compRegs_3_3_read(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_3_3_read),
    .mul_ln547(mul_ln600_reg_3966),
    .mul_ln547_1(mul_ln600_1_reg_3971),
    .mul_ln547_2(mul_ln600_2_reg_3976),
    .mul_ln547_3(mul_ln600_3_reg_3981),
    .mul_ln547_4(mul_ln600_4_reg_3986),
    .mul_ln547_5(mul_ln600_5_reg_3991),
    .mul_ln547_6(mul_ln600_6_reg_3996),
    .mul_ln547_7(mul_ln600_7_reg_4001),
    .mult_out_valid(mult_out_valid),
    .force_finish(force_finish),
    .tmp_mult_out_elems_value_address0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_value_address0),
    .tmp_mult_out_elems_value_ce0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_value_ce0),
    .tmp_mult_out_elems_value_q0(tmp_mult_out_elems_value_q0),
    .tmp_mult_out_elems_index_address0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_index_address0),
    .tmp_mult_out_elems_index_ce0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_index_ce0),
    .tmp_mult_out_elems_index_q0(tmp_mult_out_elems_index_q0),
    .tmp_mult_out_elems_last_address0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_last_address0),
    .tmp_mult_out_elems_last_ce0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_last_ce0),
    .tmp_mult_out_elems_last_q0(tmp_mult_out_elems_last_q0),
    .tmp_mult_out_elems_extra_flag_address0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_extra_flag_address0),
    .tmp_mult_out_elems_extra_flag_ce0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_extra_flag_ce0),
    .tmp_mult_out_elems_extra_flag_q0(tmp_mult_out_elems_extra_flag_q0),
    .reBuf_read_1_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_read_1_out),
    .reBuf_read_1_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_read_1_out_ap_vld),
    .reBuf_write_1_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_write_1_out),
    .reBuf_write_1_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_write_1_out_ap_vld),
    .curBuf_write_1_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_curBuf_write_1_out),
    .curBuf_write_1_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_curBuf_write_1_out_ap_vld),
    .tmp_writeback_stream_empty_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_writeback_stream_empty_out),
    .tmp_writeback_stream_empty_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_writeback_stream_empty_out_ap_vld),
    .tmp_output_valid_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_output_valid_out),
    .tmp_output_valid_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_output_valid_out_ap_vld),
    .sel_reBuf_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_sel_reBuf_out),
    .sel_reBuf_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_sel_reBuf_out_ap_vld),
    .sel_curBuf_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_sel_curBuf_out),
    .sel_curBuf_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_sel_curBuf_out_ap_vld),
    .val1_none_1_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_none_1_out),
    .val1_none_1_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_none_1_out_ap_vld),
    .val2_none_1_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_none_1_out),
    .val2_none_1_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_none_1_out_ap_vld),
    .switch_cond1_1_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_switch_cond1_1_out),
    .switch_cond1_1_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_switch_cond1_1_out_ap_vld),
    .switch_cond2_1_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_switch_cond2_1_out),
    .switch_cond2_1_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_switch_cond2_1_out_ap_vld),
    .lastA_1_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_lastA_1_out),
    .lastA_1_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_lastA_1_out_ap_vld),
    .val1_value_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_value_out),
    .val1_value_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_value_out_ap_vld),
    .val1_index_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_index_out),
    .val1_index_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_index_out_ap_vld),
    .val1_last_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_last_out),
    .val1_last_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_last_out_ap_vld),
    .val1_extra_flag_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_extra_flag_out),
    .val1_extra_flag_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_extra_flag_out_ap_vld),
    .val2_value_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_value_out),
    .val2_value_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_value_out_ap_vld),
    .val2_index_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_index_out),
    .val2_index_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_index_out_ap_vld),
    .val2_last_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_last_out),
    .val2_last_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_last_out_ap_vld),
    .val2_extra_flag_out(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_extra_flag_out),
    .val2_extra_flag_out_ap_vld(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_extra_flag_out_ap_vld),
    .comp_data_out_address0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_address0),
    .comp_data_out_ce0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_ce0),
    .comp_data_out_we0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_we0),
    .comp_data_out_d0(grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_d0)
);

system_top_mul_2ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_2ns_7ns_7_1_1_U5001(
    .din0(mul_ln600_fu_3376_p0),
    .din1(7'd41),
    .dout(mul_ln600_fu_3376_p2)
);

system_top_mul_2ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_2ns_7ns_7_1_1_U5002(
    .din0(mul_ln600_1_fu_3387_p0),
    .din1(7'd41),
    .dout(mul_ln600_1_fu_3387_p2)
);

system_top_mul_2ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_2ns_7ns_7_1_1_U5003(
    .din0(mul_ln600_2_fu_3398_p0),
    .din1(7'd41),
    .dout(mul_ln600_2_fu_3398_p2)
);

system_top_mul_2ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_2ns_7ns_7_1_1_U5004(
    .din0(mul_ln600_3_fu_3409_p0),
    .din1(7'd41),
    .dout(mul_ln600_3_fu_3409_p2)
);

system_top_mul_2ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_2ns_7ns_7_1_1_U5005(
    .din0(mul_ln600_4_fu_3420_p0),
    .din1(7'd41),
    .dout(mul_ln600_4_fu_3420_p2)
);

system_top_mul_2ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_2ns_7ns_7_1_1_U5006(
    .din0(mul_ln600_5_fu_3431_p0),
    .din1(7'd41),
    .dout(mul_ln600_5_fu_3431_p2)
);

system_top_mul_2ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_2ns_7ns_7_1_1_U5007(
    .din0(mul_ln600_6_fu_3442_p0),
    .din1(7'd41),
    .dout(mul_ln600_6_fu_3442_p2)
);

system_top_mul_2ns_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_2ns_7ns_7_1_1_U5008(
    .din0(mul_ln600_7_fu_3453_p0),
    .din1(7'd41),
    .dout(mul_ln600_7_fu_3453_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_start_reg <= 1'b1;
        end else if ((grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_ready == 1'b1)) begin
            grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        buf0_read_reg_4045 <= buf0_read_fu_3523_p3;
        buf1_read_reg_4050 <= buf1_read_fu_3539_p3;
        curBuf_write_reg_4055 <= curBuf_write_fu_3547_p3;
        lastA_reg_4026 <= lastA_fu_3494_p2;
        mul_ln600_1_reg_3971 <= mul_ln600_1_fu_3387_p2;
        mul_ln600_2_reg_3976 <= mul_ln600_2_fu_3398_p2;
        mul_ln600_3_reg_3981 <= mul_ln600_3_fu_3409_p2;
        mul_ln600_4_reg_3986 <= mul_ln600_4_fu_3420_p2;
        mul_ln600_5_reg_3991 <= mul_ln600_5_fu_3431_p2;
        mul_ln600_6_reg_3996 <= mul_ln600_6_fu_3442_p2;
        mul_ln600_7_reg_4001 <= mul_ln600_7_fu_3453_p2;
        mul_ln600_reg_3966 <= mul_ln600_fu_3376_p2;
        reBuf_read_reg_4065 <= reBuf_read_fu_3565_p3;
        reBuf_write_reg_4060 <= reBuf_write_fu_3556_p3;
        sel_curBuf_reg_4031 <= sel_curBuf_fu_3501_p2;
        sel_reBuf_reg_4040 <= sel_reBuf_fu_3508_p2;
        switch_cond1_reg_4016 <= switch_cond1_fu_3480_p2;
        switch_cond2_reg_4021 <= switch_cond2_fu_3487_p2;
        val1_none_reg_4006 <= val1_none_fu_3460_p2;
        val2_none_reg_4011 <= val2_none_fu_3467_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ * begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

always @ * begin
    if ((grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_done == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ * begin
    if (((1'b1 == ap_CS_fsm_state24) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ * begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        comp_out_empty_ap_vld = 1'b1;
    end else begin
        comp_out_empty_ap_vld = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        comp_out_valid_ap_vld = 1'b1;
    end else begin
        comp_out_valid_ap_vld = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_extra_flag_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_mult_out_elems_extra_flag_address0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_extra_flag_address0;
    end else begin
        tmp_mult_out_elems_extra_flag_address0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_extra_flag_address1 = 64'd0;
    end else begin
        tmp_mult_out_elems_extra_flag_address1 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_extra_flag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_mult_out_elems_extra_flag_ce0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_extra_flag_ce0;
    end else begin
        tmp_mult_out_elems_extra_flag_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_extra_flag_ce1 = 1'b1;
    end else begin
        tmp_mult_out_elems_extra_flag_ce1 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read164;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read163;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read161;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read159;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read157;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read155;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read153;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read151;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read149;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read147;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read145;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read143;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read141;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read139;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read137;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read135;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read133;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read131;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read129;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read127;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_extra_flag_d0 = p_read125;
    end else begin
        tmp_mult_out_elems_extra_flag_d0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read162;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read160;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read158;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read156;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read154;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read152;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read150;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read148;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read146;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read144;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read142;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read140;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read138;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read136;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read134;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read132;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read130;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read128;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read126;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_extra_flag_d1 = p_read124;
    end else begin
        tmp_mult_out_elems_extra_flag_d1 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_extra_flag_we0 = 1'b1;
    end else begin
        tmp_mult_out_elems_extra_flag_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_extra_flag_we1 = 1'b1;
    end else begin
        tmp_mult_out_elems_extra_flag_we1 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_mult_out_elems_index_address0 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_index_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_index_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_index_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_index_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_index_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_index_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_index_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_index_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_index_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_index_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_index_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_index_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_index_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_index_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_index_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_index_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_index_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_index_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_index_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_index_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_mult_out_elems_index_address0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_index_address0;
    end else begin
        tmp_mult_out_elems_index_address0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_index_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_index_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_index_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_index_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_index_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_index_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_index_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_index_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_index_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_index_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_index_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_index_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_index_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_index_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_index_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_index_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_index_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_index_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_index_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_index_address1 = 64'd0;
    end else begin
        tmp_mult_out_elems_index_address1 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_index_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_mult_out_elems_index_ce0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_index_ce0;
    end else begin
        tmp_mult_out_elems_index_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_index_ce1 = 1'b1;
    end else begin
        tmp_mult_out_elems_index_ce1 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_mult_out_elems_index_d0 = p_read82;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_index_d0 = p_read81;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_index_d0 = p_read79;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_index_d0 = p_read77;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_index_d0 = p_read75;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_index_d0 = p_read73;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_index_d0 = p_read71;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_index_d0 = p_read69;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_index_d0 = p_read67;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_index_d0 = p_read65;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_index_d0 = p_read63;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_index_d0 = p_read61;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_index_d0 = p_read59;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_index_d0 = p_read57;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_index_d0 = p_read55;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_index_d0 = p_read53;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_index_d0 = p_read51;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_index_d0 = p_read49;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_index_d0 = p_read47;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_index_d0 = p_read45;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_index_d0 = p_read43;
    end else begin
        tmp_mult_out_elems_index_d0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_index_d1 = p_read80;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_index_d1 = p_read78;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_index_d1 = p_read76;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_index_d1 = p_read74;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_index_d1 = p_read72;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_index_d1 = p_read70;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_index_d1 = p_read68;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_index_d1 = p_read66;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_index_d1 = p_read64;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_index_d1 = p_read62;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_index_d1 = p_read60;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_index_d1 = p_read58;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_index_d1 = p_read56;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_index_d1 = p_read54;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_index_d1 = p_read52;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_index_d1 = p_read50;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_index_d1 = p_read48;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_index_d1 = p_read46;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_index_d1 = p_read44;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_index_d1 = p_read42;
    end else begin
        tmp_mult_out_elems_index_d1 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_index_we0 = 1'b1;
    end else begin
        tmp_mult_out_elems_index_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_index_we1 = 1'b1;
    end else begin
        tmp_mult_out_elems_index_we1 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_mult_out_elems_last_address0 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_last_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_last_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_last_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_last_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_last_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_last_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_last_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_last_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_last_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_last_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_last_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_last_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_last_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_last_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_last_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_last_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_last_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_last_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_last_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_last_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_mult_out_elems_last_address0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_last_address0;
    end else begin
        tmp_mult_out_elems_last_address0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_last_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_last_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_last_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_last_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_last_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_last_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_last_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_last_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_last_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_last_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_last_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_last_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_last_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_last_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_last_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_last_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_last_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_last_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_last_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_last_address1 = 64'd0;
    end else begin
        tmp_mult_out_elems_last_address1 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_last_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_mult_out_elems_last_ce0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_last_ce0;
    end else begin
        tmp_mult_out_elems_last_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_last_ce1 = 1'b1;
    end else begin
        tmp_mult_out_elems_last_ce1 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_mult_out_elems_last_d0 = p_read123;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_last_d0 = p_read122;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_last_d0 = p_read120;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_last_d0 = p_read118;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_last_d0 = p_read116;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_last_d0 = p_read114;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_last_d0 = p_read112;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_last_d0 = p_read110;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_last_d0 = p_read108;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_last_d0 = p_read106;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_last_d0 = p_read104;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_last_d0 = p_read102;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_last_d0 = p_read100;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_last_d0 = p_read98;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_last_d0 = p_read96;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_last_d0 = p_read94;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_last_d0 = p_read92;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_last_d0 = p_read90;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_last_d0 = p_read88;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_last_d0 = p_read86;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_last_d0 = p_read84;
    end else begin
        tmp_mult_out_elems_last_d0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_last_d1 = p_read121;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_last_d1 = p_read119;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_last_d1 = p_read117;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_last_d1 = p_read115;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_last_d1 = p_read113;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_last_d1 = p_read111;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_last_d1 = p_read109;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_last_d1 = p_read107;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_last_d1 = p_read105;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_last_d1 = p_read103;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_last_d1 = p_read101;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_last_d1 = p_read99;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_last_d1 = p_read97;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_last_d1 = p_read95;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_last_d1 = p_read93;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_last_d1 = p_read91;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_last_d1 = p_read89;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_last_d1 = p_read87;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_last_d1 = p_read85;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_last_d1 = p_read83;
    end else begin
        tmp_mult_out_elems_last_d1 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_last_we0 = 1'b1;
    end else begin
        tmp_mult_out_elems_last_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_last_we1 = 1'b1;
    end else begin
        tmp_mult_out_elems_last_we1 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_mult_out_elems_value_address0 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_value_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_value_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_value_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_value_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_value_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_value_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_value_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_value_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_value_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_value_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_value_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_value_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_value_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_value_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_value_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_value_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_value_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_value_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_value_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_value_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_mult_out_elems_value_address0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_value_address0;
    end else begin
        tmp_mult_out_elems_value_address0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_value_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_value_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_value_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_value_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_value_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_value_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_value_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_value_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_value_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_value_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_value_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_value_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_value_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_value_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_value_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_value_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_value_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_value_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_value_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_value_address1 = 64'd0;
    end else begin
        tmp_mult_out_elems_value_address1 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_value_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_mult_out_elems_value_ce0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_mult_out_elems_value_ce0;
    end else begin
        tmp_mult_out_elems_value_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_value_ce1 = 1'b1;
    end else begin
        tmp_mult_out_elems_value_ce1 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_mult_out_elems_value_d0 = p_read41;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_value_d0 = p_read40;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_value_d0 = p_read38;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_value_d0 = p_read36;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_value_d0 = p_read34;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_value_d0 = p_read32;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_value_d0 = p_read30;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_value_d0 = p_read28;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_value_d0 = p_read26;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_value_d0 = p_read24;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_value_d0 = p_read22;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_value_d0 = p_read20;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_value_d0 = p_read18;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_value_d0 = p_read16;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_value_d0 = p_read14;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_value_d0 = p_read12;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_value_d0 = p_read10;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_value_d0 = p_read8;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_value_d0 = p_read6;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_value_d0 = p_read4;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_value_d0 = p_read2;
    end else begin
        tmp_mult_out_elems_value_d0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_mult_out_elems_value_d1 = p_read39;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_mult_out_elems_value_d1 = p_read37;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_mult_out_elems_value_d1 = p_read35;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_mult_out_elems_value_d1 = p_read33;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_mult_out_elems_value_d1 = p_read31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_mult_out_elems_value_d1 = p_read29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_mult_out_elems_value_d1 = p_read27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_mult_out_elems_value_d1 = p_read25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_mult_out_elems_value_d1 = p_read23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_mult_out_elems_value_d1 = p_read21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_mult_out_elems_value_d1 = p_read19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_mult_out_elems_value_d1 = p_read17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_mult_out_elems_value_d1 = p_read15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_mult_out_elems_value_d1 = p_read13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_mult_out_elems_value_d1 = p_read11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_mult_out_elems_value_d1 = p_read9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_mult_out_elems_value_d1 = p_read7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_mult_out_elems_value_d1 = p_read5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_mult_out_elems_value_d1 = p_read3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_mult_out_elems_value_d1 = p_read1;
    end else begin
        tmp_mult_out_elems_value_d1 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_value_we0 = 1'b1;
    end else begin
        tmp_mult_out_elems_value_we0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_mult_out_elems_value_we1 = 1'b1;
    end else begin
        tmp_mult_out_elems_value_we1 = 1'b0;
    end
end

always @ * begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return_0 = init;

assign ap_return_1 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_value_out;

assign ap_return_10 = select_ln617_fu_3641_p3;

assign ap_return_11 = select_ln618_fu_3647_p3;

assign ap_return_12 = select_ln619_fu_3654_p3;

assign ap_return_13 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_sel_reBuf_out;

assign ap_return_14 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_sel_curBuf_out;

assign ap_return_15 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_none_1_out;

assign ap_return_16 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_none_1_out;

assign ap_return_17 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_lastA_1_out;

assign ap_return_18 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_switch_cond1_1_out;

assign ap_return_19 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_switch_cond2_1_out;

assign ap_return_2 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_index_out;

assign ap_return_3 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_last_out;

assign ap_return_4 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val1_extra_flag_out;

assign ap_return_5 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_value_out;

assign ap_return_6 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_index_out;

assign ap_return_7 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_last_out;

assign ap_return_8 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_val2_extra_flag_out;

assign ap_return_9 = select_ln616_fu_3634_p3;

assign buf0_read_fu_3523_p3 = ((init[0:0] == 1'b1) ? 8'd0 : compRegs_5_read);

assign buf0_write_fu_3515_p3 = ((init[0:0] == 1'b1) ? 8'd0 : compRegs_4_read);

assign buf1_read_fu_3539_p3 = ((init[0:0] == 1'b1) ? 8'd0 : compRegs_7_read);

assign buf1_write_fu_3531_p3 = ((init[0:0] == 1'b1) ? 8'd0 : compRegs_6_read);

assign comp_data_out_address0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_address0;

assign comp_data_out_ce0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_ce0;

assign comp_data_out_d0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_d0;

assign comp_data_out_we0 = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_comp_data_out_we0;

assign comp_out_empty = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_writeback_stream_empty_out;

assign comp_out_valid = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_tmp_output_valid_out;

assign curBuf_write_fu_3547_p3 = ((sel_curBuf_fu_3501_p2[0:0] == 1'b1) ? buf1_write_fu_3531_p3 : buf0_write_fu_3515_p3);

assign grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_start = grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_ap_start_reg;

assign grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_2_2_read = compRegs_2_2_read;

assign grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_2_3_read = compRegs_2_3_read;

assign grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_3_2_read = compRegs_3_2_read;

assign grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_compRegs_3_3_read = compRegs_3_3_read;

assign lastA_fu_3494_p2 = (xor_ln506_fu_3474_p2 & compRegs_12_read);

assign mul_ln600_1_fu_3387_p0 = mul_ln600_1_fu_3387_p00;

assign mul_ln600_1_fu_3387_p00 = compRegs_1_2_offset;

assign mul_ln600_2_fu_3398_p0 = mul_ln600_2_fu_3398_p00;

assign mul_ln600_2_fu_3398_p00 = compRegs_1_1_offset;

assign mul_ln600_3_fu_3409_p0 = mul_ln600_3_fu_3409_p00;

assign mul_ln600_3_fu_3409_p00 = compRegs_1_0_offset;

assign mul_ln600_4_fu_3420_p0 = mul_ln600_4_fu_3420_p00;

assign mul_ln600_4_fu_3420_p00 = compRegs_0_3_offset;

assign mul_ln600_5_fu_3431_p0 = mul_ln600_5_fu_3431_p00;

assign mul_ln600_5_fu_3431_p00 = compRegs_0_2_offset;

assign mul_ln600_6_fu_3442_p0 = mul_ln600_6_fu_3442_p00;

assign mul_ln600_6_fu_3442_p00 = compRegs_0_1_offset;

assign mul_ln600_7_fu_3453_p0 = mul_ln600_7_fu_3453_p00;

assign mul_ln600_7_fu_3453_p00 = compRegs_0_0_offset;

assign mul_ln600_fu_3376_p0 = mul_ln600_fu_3376_p00;

assign mul_ln600_fu_3376_p00 = compRegs_1_3_offset;

assign reBuf_read_fu_3565_p3 = ((sel_reBuf_fu_3508_p2[0:0] == 1'b1) ? buf1_read_fu_3539_p3 : buf0_read_fu_3523_p3);

assign reBuf_write_fu_3556_p3 = ((sel_reBuf_fu_3508_p2[0:0] == 1'b1) ? buf1_write_fu_3531_p3 : buf0_write_fu_3515_p3);

assign sel_curBuf_fu_3501_p2 = (xor_ln506_fu_3474_p2 & compRegs_9_read);

assign sel_reBuf_fu_3508_p2 = (init | compRegs_8_read);

assign select_ln616_fu_3634_p3 = ((sel_curBuf_reg_4031[0:0] == 1'b1) ? grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_write_1_out : grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_curBuf_write_1_out);

assign select_ln617_fu_3641_p3 = ((sel_curBuf_reg_4031[0:0] == 1'b1) ? grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_read_1_out : buf0_read_reg_4045);

assign select_ln618_fu_3647_p3 = ((sel_curBuf_reg_4031[0:0] == 1'b1) ? grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_curBuf_write_1_out : grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_write_1_out);

assign select_ln619_fu_3654_p3 = ((sel_curBuf_reg_4031[0:0] == 1'b1) ? buf1_read_reg_4050 : grp_compare_Pipeline_COMP_OUT_LOOP_fu_3288_reBuf_read_1_out);

assign switch_cond1_fu_3480_p2 = (xor_ln506_fu_3474_p2 & compRegs_13_read);

assign switch_cond2_fu_3487_p2 = (xor_ln506_fu_3474_p2 & compRegs_14_read);

assign val1_none_fu_3460_p2 = (init | compRegs_10_read);

assign val2_none_fu_3467_p2 = (init | compRegs_11_read);

assign xor_ln506_fu_3474_p2 = (init ^ 1'd1);

endmodule //system_top_compare
