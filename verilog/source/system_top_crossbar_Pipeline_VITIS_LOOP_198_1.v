// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_crossbar_Pipeline_VITIS_LOOP_198_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        reqIN_write_ptr_0_load,
        reqIN_write_ptr_1_load,
        reqIN_write_ptr_2_load,
        reqIN_write_ptr_3_load,
        repIN_write_ptr_0_load,
        repIN_write_ptr_1_load,
        repIN_write_ptr_2_load,
        repIN_write_ptr_3_load,
        init,
        tmp_repOUT_ptr_3_out,
        tmp_repOUT_ptr_3_out_ap_vld,
        tmp_repOUT_ptr_2_out,
        tmp_repOUT_ptr_2_out_ap_vld,
        tmp_repOUT_ptr_1_out,
        tmp_repOUT_ptr_1_out_ap_vld,
        tmp_repOUT_ptr_out,
        tmp_repOUT_ptr_out_ap_vld,
        tmp_reqOUT_ptr_3_out,
        tmp_reqOUT_ptr_3_out_ap_vld,
        tmp_reqOUT_ptr_2_out,
        tmp_reqOUT_ptr_2_out_ap_vld,
        tmp_reqOUT_ptr_1_out,
        tmp_reqOUT_ptr_1_out_ap_vld,
        tmp_reqOUT_ptr_out,
        tmp_reqOUT_ptr_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] reqIN_write_ptr_0_load;
input  [7:0] reqIN_write_ptr_1_load;
input  [7:0] reqIN_write_ptr_2_load;
input  [7:0] reqIN_write_ptr_3_load;
input  [7:0] repIN_write_ptr_0_load;
input  [7:0] repIN_write_ptr_1_load;
input  [7:0] repIN_write_ptr_2_load;
input  [7:0] repIN_write_ptr_3_load;
input  [0:0] init;
output  [7:0] tmp_repOUT_ptr_3_out;
output   tmp_repOUT_ptr_3_out_ap_vld;
output  [7:0] tmp_repOUT_ptr_2_out;
output   tmp_repOUT_ptr_2_out_ap_vld;
output  [7:0] tmp_repOUT_ptr_1_out;
output   tmp_repOUT_ptr_1_out_ap_vld;
output  [7:0] tmp_repOUT_ptr_out;
output   tmp_repOUT_ptr_out_ap_vld;
output  [7:0] tmp_reqOUT_ptr_3_out;
output   tmp_reqOUT_ptr_3_out_ap_vld;
output  [7:0] tmp_reqOUT_ptr_2_out;
output   tmp_reqOUT_ptr_2_out_ap_vld;
output  [7:0] tmp_reqOUT_ptr_1_out;
output   tmp_reqOUT_ptr_1_out_ap_vld;
output  [7:0] tmp_reqOUT_ptr_out;
output   tmp_reqOUT_ptr_out_ap_vld;

reg ap_idle;
reg tmp_repOUT_ptr_3_out_ap_vld;
reg tmp_repOUT_ptr_2_out_ap_vld;
reg tmp_repOUT_ptr_1_out_ap_vld;
reg tmp_repOUT_ptr_out_ap_vld;
reg tmp_reqOUT_ptr_3_out_ap_vld;
reg tmp_reqOUT_ptr_2_out_ap_vld;
reg tmp_reqOUT_ptr_1_out_ap_vld;
reg tmp_reqOUT_ptr_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln198_fu_228_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [2:0] i_fu_74;
wire   [2:0] add_ln198_fu_234_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_11;
reg   [7:0] tmp_reqOUT_ptr_fu_78;
wire   [7:0] tmp_reqOUT_ptr_7_fu_438_p3;
reg   [7:0] tmp_reqOUT_ptr_1_fu_82;
wire   [7:0] tmp_reqOUT_ptr_6_fu_408_p3;
reg   [7:0] tmp_reqOUT_ptr_2_fu_86;
wire   [7:0] tmp_reqOUT_ptr_5_fu_378_p3;
reg   [7:0] tmp_reqOUT_ptr_3_fu_90;
wire   [7:0] tmp_reqOUT_ptr_8_fu_348_p3;
reg   [7:0] tmp_repOUT_ptr_fu_94;
wire   [7:0] tmp_repOUT_ptr_8_fu_478_p3;
reg   [7:0] tmp_repOUT_ptr_1_fu_98;
wire   [7:0] tmp_repOUT_ptr_7_fu_470_p3;
reg   [7:0] tmp_repOUT_ptr_2_fu_102;
wire   [7:0] tmp_repOUT_ptr_6_fu_462_p3;
reg   [7:0] tmp_repOUT_ptr_3_fu_106;
wire   [7:0] tmp_repOUT_ptr_5_fu_454_p3;
wire   [1:0] trunc_ln199_fu_264_p1;
wire   [0:0] icmp_ln199_2_fu_294_p2;
wire   [0:0] icmp_ln199_1_fu_288_p2;
wire   [0:0] or_ln199_fu_300_p2;
wire   [0:0] icmp_ln199_fu_282_p2;
wire   [0:0] or_ln199_1_fu_306_p2;
wire   [0:0] and_ln199_fu_326_p2;
wire   [7:0] tmp_reqOUT_ptr_4_fu_268_p6;
wire   [7:0] select_ln199_fu_332_p3;
wire   [7:0] select_ln199_1_fu_340_p3;
wire   [0:0] and_ln199_1_fu_356_p2;
wire   [7:0] select_ln199_3_fu_362_p3;
wire   [7:0] select_ln199_4_fu_370_p3;
wire   [0:0] and_ln199_2_fu_386_p2;
wire   [7:0] select_ln199_6_fu_392_p3;
wire   [7:0] select_ln199_7_fu_400_p3;
wire   [0:0] and_ln199_3_fu_416_p2;
wire   [7:0] select_ln199_9_fu_422_p3;
wire   [7:0] select_ln199_10_fu_430_p3;
wire   [7:0] tmp_s_fu_312_p6;
wire   [7:0] tmp_repOUT_ptr_4_fu_446_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

system_top_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U4465(
    .din0(reqIN_write_ptr_0_load),
    .din1(reqIN_write_ptr_1_load),
    .din2(reqIN_write_ptr_2_load),
    .din3(reqIN_write_ptr_3_load),
    .din4(trunc_ln199_fu_264_p1),
    .dout(tmp_reqOUT_ptr_4_fu_268_p6)
);

system_top_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U4466(
    .din0(repIN_write_ptr_0_load),
    .din1(repIN_write_ptr_1_load),
    .din2(repIN_write_ptr_2_load),
    .din3(repIN_write_ptr_3_load),
    .din4(trunc_ln199_fu_264_p1),
    .dout(tmp_s_fu_312_p6)
);

system_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln198_fu_228_p2 == 1'd0)) begin
            i_fu_74 <= add_ln198_fu_234_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_74 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln198_fu_228_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_repOUT_ptr_1_fu_98 <= tmp_repOUT_ptr_7_fu_470_p3;
        tmp_repOUT_ptr_2_fu_102 <= tmp_repOUT_ptr_6_fu_462_p3;
        tmp_repOUT_ptr_3_fu_106 <= tmp_repOUT_ptr_5_fu_454_p3;
        tmp_repOUT_ptr_fu_94 <= tmp_repOUT_ptr_8_fu_478_p3;
        tmp_reqOUT_ptr_1_fu_82 <= tmp_reqOUT_ptr_6_fu_408_p3;
        tmp_reqOUT_ptr_2_fu_86 <= tmp_reqOUT_ptr_5_fu_378_p3;
        tmp_reqOUT_ptr_3_fu_90 <= tmp_reqOUT_ptr_8_fu_348_p3;
        tmp_reqOUT_ptr_fu_78 <= tmp_reqOUT_ptr_7_fu_438_p3;
    end
end

always @ * begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ * begin
    if (((ap_start_int == 1'b1) & (icmp_ln198_fu_228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ * begin
    if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ * begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ * begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ * begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_11 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_11 = i_fu_74;
    end
end

always @ * begin
    if (((ap_start_int == 1'b1) & (icmp_ln198_fu_228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_repOUT_ptr_1_out_ap_vld = 1'b1;
    end else begin
        tmp_repOUT_ptr_1_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((ap_start_int == 1'b1) & (icmp_ln198_fu_228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_repOUT_ptr_2_out_ap_vld = 1'b1;
    end else begin
        tmp_repOUT_ptr_2_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((ap_start_int == 1'b1) & (icmp_ln198_fu_228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_repOUT_ptr_3_out_ap_vld = 1'b1;
    end else begin
        tmp_repOUT_ptr_3_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((ap_start_int == 1'b1) & (icmp_ln198_fu_228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_repOUT_ptr_out_ap_vld = 1'b1;
    end else begin
        tmp_repOUT_ptr_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((ap_start_int == 1'b1) & (icmp_ln198_fu_228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reqOUT_ptr_1_out_ap_vld = 1'b1;
    end else begin
        tmp_reqOUT_ptr_1_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((ap_start_int == 1'b1) & (icmp_ln198_fu_228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reqOUT_ptr_2_out_ap_vld = 1'b1;
    end else begin
        tmp_reqOUT_ptr_2_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((ap_start_int == 1'b1) & (icmp_ln198_fu_228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reqOUT_ptr_3_out_ap_vld = 1'b1;
    end else begin
        tmp_reqOUT_ptr_3_out_ap_vld = 1'b0;
    end
end

always @ * begin
    if (((ap_start_int == 1'b1) & (icmp_ln198_fu_228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reqOUT_ptr_out_ap_vld = 1'b1;
    end else begin
        tmp_reqOUT_ptr_out_ap_vld = 1'b0;
    end
end

always @ * begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln198_fu_234_p2 = (ap_sig_allocacmp_i_11 + 3'd1);

assign and_ln199_1_fu_356_p2 = (init & icmp_ln199_2_fu_294_p2);

assign and_ln199_2_fu_386_p2 = (init & icmp_ln199_1_fu_288_p2);

assign and_ln199_3_fu_416_p2 = (init & icmp_ln199_fu_282_p2);

assign and_ln199_fu_326_p2 = (or_ln199_1_fu_306_p2 & init);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ * begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln198_fu_228_p2 = ((ap_sig_allocacmp_i_11 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln199_1_fu_288_p2 = ((trunc_ln199_fu_264_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln199_2_fu_294_p2 = ((trunc_ln199_fu_264_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln199_fu_282_p2 = ((trunc_ln199_fu_264_p1 == 2'd0) ? 1'b1 : 1'b0);

assign or_ln199_1_fu_306_p2 = (or_ln199_fu_300_p2 | icmp_ln199_fu_282_p2);

assign or_ln199_fu_300_p2 = (icmp_ln199_2_fu_294_p2 | icmp_ln199_1_fu_288_p2);

assign select_ln199_10_fu_430_p3 = ((icmp_ln199_fu_282_p2[0:0] == 1'b1) ? tmp_reqOUT_ptr_4_fu_268_p6 : tmp_reqOUT_ptr_fu_78);

assign select_ln199_1_fu_340_p3 = ((or_ln199_1_fu_306_p2[0:0] == 1'b1) ? tmp_reqOUT_ptr_3_fu_90 : tmp_reqOUT_ptr_4_fu_268_p6);

assign select_ln199_3_fu_362_p3 = ((and_ln199_1_fu_356_p2[0:0] == 1'b1) ? 8'd0 : tmp_reqOUT_ptr_2_fu_86);

assign select_ln199_4_fu_370_p3 = ((icmp_ln199_2_fu_294_p2[0:0] == 1'b1) ? tmp_reqOUT_ptr_4_fu_268_p6 : tmp_reqOUT_ptr_2_fu_86);

assign select_ln199_6_fu_392_p3 = ((and_ln199_2_fu_386_p2[0:0] == 1'b1) ? 8'd0 : tmp_reqOUT_ptr_1_fu_82);

assign select_ln199_7_fu_400_p3 = ((icmp_ln199_1_fu_288_p2[0:0] == 1'b1) ? tmp_reqOUT_ptr_4_fu_268_p6 : tmp_reqOUT_ptr_1_fu_82);

assign select_ln199_9_fu_422_p3 = ((and_ln199_3_fu_416_p2[0:0] == 1'b1) ? 8'd0 : tmp_reqOUT_ptr_fu_78);

assign select_ln199_fu_332_p3 = ((and_ln199_fu_326_p2[0:0] == 1'b1) ? tmp_reqOUT_ptr_3_fu_90 : 8'd0);

assign tmp_repOUT_ptr_1_out = tmp_repOUT_ptr_1_fu_98;

assign tmp_repOUT_ptr_2_out = tmp_repOUT_ptr_2_fu_102;

assign tmp_repOUT_ptr_3_out = tmp_repOUT_ptr_3_fu_106;

assign tmp_repOUT_ptr_4_fu_446_p3 = ((init[0:0] == 1'b1) ? 8'd0 : tmp_s_fu_312_p6);

assign tmp_repOUT_ptr_5_fu_454_p3 = ((or_ln199_1_fu_306_p2[0:0] == 1'b1) ? tmp_repOUT_ptr_3_fu_106 : tmp_repOUT_ptr_4_fu_446_p3);

assign tmp_repOUT_ptr_6_fu_462_p3 = ((icmp_ln199_2_fu_294_p2[0:0] == 1'b1) ? tmp_repOUT_ptr_4_fu_446_p3 : tmp_repOUT_ptr_2_fu_102);

assign tmp_repOUT_ptr_7_fu_470_p3 = ((icmp_ln199_1_fu_288_p2[0:0] == 1'b1) ? tmp_repOUT_ptr_4_fu_446_p3 : tmp_repOUT_ptr_1_fu_98);

assign tmp_repOUT_ptr_8_fu_478_p3 = ((icmp_ln199_fu_282_p2[0:0] == 1'b1) ? tmp_repOUT_ptr_4_fu_446_p3 : tmp_repOUT_ptr_fu_94);

assign tmp_repOUT_ptr_out = tmp_repOUT_ptr_fu_94;

assign tmp_reqOUT_ptr_1_out = tmp_reqOUT_ptr_1_fu_82;

assign tmp_reqOUT_ptr_2_out = tmp_reqOUT_ptr_2_fu_86;

assign tmp_reqOUT_ptr_3_out = tmp_reqOUT_ptr_3_fu_90;

assign tmp_reqOUT_ptr_5_fu_378_p3 = ((init[0:0] == 1'b1) ? select_ln199_3_fu_362_p3 : select_ln199_4_fu_370_p3);

assign tmp_reqOUT_ptr_6_fu_408_p3 = ((init[0:0] == 1'b1) ? select_ln199_6_fu_392_p3 : select_ln199_7_fu_400_p3);

assign tmp_reqOUT_ptr_7_fu_438_p3 = ((init[0:0] == 1'b1) ? select_ln199_9_fu_422_p3 : select_ln199_10_fu_430_p3);

assign tmp_reqOUT_ptr_8_fu_348_p3 = ((init[0:0] == 1'b1) ? select_ln199_fu_332_p3 : select_ln199_1_fu_340_p3);

assign tmp_reqOUT_ptr_out = tmp_reqOUT_ptr_fu_78;

assign trunc_ln199_fu_264_p1 = ap_sig_allocacmp_i_11[1:0];

endmodule //system_top_crossbar_Pipeline_VITIS_LOOP_198_1
