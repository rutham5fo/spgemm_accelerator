// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_update_count (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        init,
        regs_name,
        req_row,
        countTable_offset,
        ext_count,
        count_set,
        count_val,
        fetch_count,
        out_write_ptr_read,
        countRegs_0_offset,
        countRegs_1_read,
        countRegs_2_read,
        ext_reqOUT_address0,
        ext_reqOUT_ce0,
        ext_reqOUT_we0,
        ext_reqOUT_d0,
        ext_reqOUT_offset,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] init;
input  [1:0] regs_name;
input  [7:0] req_row;
input  [1:0] countTable_offset;
input  [7:0] ext_count;
input  [7:0] count_set;
input  [7:0] count_val;
input  [7:0] fetch_count;
input  [7:0] out_write_ptr_read;
input  [1:0] countRegs_0_offset;
input  [7:0] countRegs_1_read;
input  [7:0] countRegs_2_read;
output  [4:0] ext_reqOUT_address0;
output   ext_reqOUT_ce0;
output   ext_reqOUT_we0;
output  [26:0] ext_reqOUT_d0;
input  [1:0] ext_reqOUT_offset;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ext_reqOUT_ce0;
reg ext_reqOUT_we0;
reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] countRegs_regs_availRows_fifo_address0;
reg    countRegs_regs_availRows_fifo_ce0;
reg    countRegs_regs_availRows_fifo_we0;
wire   [7:0] countRegs_regs_availRows_fifo_q0;
reg   [2:0] procRegs_countTable_address0;
reg    procRegs_countTable_ce0;
reg    procRegs_countTable_we0;
wire   [7:0] procRegs_countTable_q0;
wire   [4:0] tmp_218_fu_289_p3;
reg   [4:0] tmp_218_reg_628;
wire   [3:0] sub_ln78_fu_309_p2;
reg   [3:0] sub_ln78_reg_633;
wire   [2:0] tmp_220_fu_315_p3;
reg   [2:0] tmp_220_reg_638;
wire   [7:0] row_cur_ptr_fu_324_p3;
wire   [7:0] row_prev_ptr_fu_332_p3;
reg   [7:0] row_prev_ptr_reg_649;
wire   [7:0] write_ptr_fu_340_p3;
reg   [7:0] write_ptr_reg_657;
wire   [7:0] row_cur_ptr_1_fu_369_p2;
wire   [0:0] icmp_ln76_fu_348_p2;
wire   [0:0] cmp38_not_fu_375_p2;
reg   [0:0] cmp38_not_reg_672;
wire   [0:0] icmp_ln88_fu_401_p2;
reg   [0:0] icmp_ln88_reg_677;
wire   [0:0] or_ln88_fu_407_p2;
reg   [0:0] or_ln88_reg_682;
wire   [0:0] cmp50_not_fu_421_p2;
reg   [0:0] cmp50_not_reg_693;
wire    ap_CS_fsm_state3;
wire   [0:0] cmp59_not_fu_427_p2;
reg   [0:0] cmp59_not_reg_698;
wire   [0:0] empty_fu_433_p1;
reg   [0:0] empty_reg_703;
wire   [0:0] empty_71_fu_437_p1;
reg   [0:0] empty_71_reg_708;
wire   [0:0] cmp78_fu_449_p2;
reg   [0:0] cmp78_reg_719;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_start;
wire    grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_done;
wire    grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_idle;
wire    grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_ready;
wire   [7:0] grp_update_count_Pipeline_CPY_COUNT_fu_249_weight_1_out;
wire    grp_update_count_Pipeline_CPY_COUNT_fu_249_weight_1_out_ap_vld;
wire   [7:0] grp_update_count_Pipeline_CPY_COUNT_fu_249_weight_out;
wire    grp_update_count_Pipeline_CPY_COUNT_fu_249_weight_out_ap_vld;
wire   [2:0] grp_update_count_Pipeline_CPY_COUNT_fu_249_procRegs_countTable_address0;
wire    grp_update_count_Pipeline_CPY_COUNT_fu_249_procRegs_countTable_ce0;
wire    grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_start;
wire    grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_done;
wire    grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_idle;
wire    grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_ready;
wire   [7:0] grp_update_count_Pipeline_UP_COUNT_1_fu_260_weight_3_out;
wire    grp_update_count_Pipeline_UP_COUNT_1_fu_260_weight_3_out_ap_vld;
wire   [7:0] grp_update_count_Pipeline_UP_COUNT_1_fu_260_weight_2_out;
wire    grp_update_count_Pipeline_UP_COUNT_1_fu_260_weight_2_out_ap_vld;
wire    grp_update_count_Pipeline_SET_COUNT_fu_278_ap_start;
wire    grp_update_count_Pipeline_SET_COUNT_fu_278_ap_done;
wire    grp_update_count_Pipeline_SET_COUNT_fu_278_ap_idle;
wire    grp_update_count_Pipeline_SET_COUNT_fu_278_ap_ready;
wire   [7:0] grp_update_count_Pipeline_SET_COUNT_fu_278_req_loc_out;
wire    grp_update_count_Pipeline_SET_COUNT_fu_278_req_loc_out_ap_vld;
wire   [2:0] grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_address0;
wire    grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_ce0;
wire    grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_we0;
wire   [7:0] grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_d0;
reg   [7:0] row_cur_ptr_2_reg_221;
wire   [7:0] row_prev_ptr_1_fu_471_p2;
reg   [7:0] ap_phi_mux_row_prev_ptr_2_phi_fu_234_p4;
reg   [7:0] row_prev_ptr_2_reg_231;
wire    ap_CS_fsm_state8;
wire   [7:0] write_ptr_1_fu_503_p2;
reg   [7:0] ap_phi_mux_write_ptr_2_phi_fu_243_p4;
reg   [7:0] write_ptr_2_reg_240;
reg    grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_update_count_Pipeline_SET_COUNT_fu_278_ap_start_reg;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln78_1_fu_364_p1;
wire   [63:0] zext_ln115_fu_466_p1;
wire   [63:0] zext_ln118_fu_485_p1;
wire   [3:0] tmp_219_fu_301_p3;
wire   [3:0] zext_ln78_fu_297_p1;
wire   [3:0] trunc_ln78_fu_354_p1;
wire   [3:0] add_ln78_fu_358_p2;
wire   [0:0] empty_70_fu_381_p1;
wire   [6:0] tmp_fu_391_p4;
wire   [0:0] cond30_fu_385_p2;
wire   [3:0] trunc_ln115_fu_458_p1;
wire   [3:0] add_ln115_fu_461_p2;
wire   [4:0] trunc_ln118_fu_477_p1;
wire   [4:0] add_ln118_fu_480_p2;
wire   [0:0] icmp_ln121_fu_509_p2;
wire   [0:0] icmp_ln122_fu_523_p2;
wire   [0:0] icmp_ln123_fu_537_p2;
wire   [7:0] select_ln121_fu_515_p3;
wire   [7:0] select_ln122_fu_529_p3;
wire   [7:0] select_ln123_fu_543_p3;
reg   [7:0] ap_return_0_preg;
reg   [7:0] ap_return_1_preg;
reg   [7:0] ap_return_2_preg;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_start_reg = 1'b0;
#0 grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_start_reg = 1'b0;
#0 grp_update_count_Pipeline_SET_COUNT_fu_278_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 8'd0;
#0 ap_return_1_preg = 8'd0;
#0 ap_return_2_preg = 8'd0;
end

system_top_update_count_countRegs_regs_availRows_fifo_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
countRegs_regs_availRows_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(countRegs_regs_availRows_fifo_address0),
    .ce0(countRegs_regs_availRows_fifo_ce0),
    .we0(countRegs_regs_availRows_fifo_we0),
    .d0(req_row),
    .q0(countRegs_regs_availRows_fifo_q0)
);

system_top_fetchNext_procRegs_regs_prev_req_row_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
procRegs_countTable_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(procRegs_countTable_address0),
    .ce0(procRegs_countTable_ce0),
    .we0(procRegs_countTable_we0),
    .d0(grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_d0),
    .q0(procRegs_countTable_q0)
);

system_top_update_count_Pipeline_CPY_COUNT grp_update_count_Pipeline_CPY_COUNT_fu_249(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_start),
    .ap_done(grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_done),
    .ap_idle(grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_idle),
    .ap_ready(grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_ready),
    .zext_ln82(tmp_220_reg_638),
    .init(init),
    .weight_1_out(grp_update_count_Pipeline_CPY_COUNT_fu_249_weight_1_out),
    .weight_1_out_ap_vld(grp_update_count_Pipeline_CPY_COUNT_fu_249_weight_1_out_ap_vld),
    .weight_out(grp_update_count_Pipeline_CPY_COUNT_fu_249_weight_out),
    .weight_out_ap_vld(grp_update_count_Pipeline_CPY_COUNT_fu_249_weight_out_ap_vld),
    .procRegs_countTable_address0(grp_update_count_Pipeline_CPY_COUNT_fu_249_procRegs_countTable_address0),
    .procRegs_countTable_ce0(grp_update_count_Pipeline_CPY_COUNT_fu_249_procRegs_countTable_ce0),
    .procRegs_countTable_q0(procRegs_countTable_q0)
);

system_top_update_count_Pipeline_UP_COUNT_1 grp_update_count_Pipeline_UP_COUNT_1_fu_260(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_start),
    .ap_done(grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_done),
    .ap_idle(grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_idle),
    .ap_ready(grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_ready),
    .weight_1_reload(grp_update_count_Pipeline_CPY_COUNT_fu_249_weight_1_out),
    .weight_reload(grp_update_count_Pipeline_CPY_COUNT_fu_249_weight_out),
    .cmp38_not(cmp38_not_reg_672),
    .cmp50_not(cmp50_not_reg_693),
    .icmp_ln88(icmp_ln88_reg_677),
    .count_val(count_val),
    .or_ln88(or_ln88_reg_682),
    .cmp59_not(cmp59_not_reg_698),
    .ext_count(ext_count),
    .ext_count_cast(empty_reg_703),
    .fetch_count(fetch_count),
    .fetch_count_cast(empty_71_reg_708),
    .weight_3_out(grp_update_count_Pipeline_UP_COUNT_1_fu_260_weight_3_out),
    .weight_3_out_ap_vld(grp_update_count_Pipeline_UP_COUNT_1_fu_260_weight_3_out_ap_vld),
    .weight_2_out(grp_update_count_Pipeline_UP_COUNT_1_fu_260_weight_2_out),
    .weight_2_out_ap_vld(grp_update_count_Pipeline_UP_COUNT_1_fu_260_weight_2_out_ap_vld)
);

system_top_update_count_Pipeline_SET_COUNT grp_update_count_Pipeline_SET_COUNT_fu_278(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_count_Pipeline_SET_COUNT_fu_278_ap_start),
    .ap_done(grp_update_count_Pipeline_SET_COUNT_fu_278_ap_done),
    .ap_idle(grp_update_count_Pipeline_SET_COUNT_fu_278_ap_idle),
    .ap_ready(grp_update_count_Pipeline_SET_COUNT_fu_278_ap_ready),
    .zext_ln82(tmp_220_reg_638),
    .weight_2_reload(grp_update_count_Pipeline_UP_COUNT_1_fu_260_weight_2_out),
    .weight_3_reload(grp_update_count_Pipeline_UP_COUNT_1_fu_260_weight_3_out),
    .cmp78(cmp78_reg_719),
    .req_loc_out(grp_update_count_Pipeline_SET_COUNT_fu_278_req_loc_out),
    .req_loc_out_ap_vld(grp_update_count_Pipeline_SET_COUNT_fu_278_req_loc_out_ap_vld),
    .procRegs_countTable_address0(grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_address0),
    .procRegs_countTable_ce0(grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_ce0),
    .procRegs_countTable_we0(grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_we0),
    .procRegs_countTable_d0(grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_return_0_preg <= select_ln121_fu_515_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_return_1_preg <= select_ln122_fu_529_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_return_2_preg <= select_ln123_fu_543_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_start_reg <= 1'b1;
        end else if ((grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_ready == 1'b1)) begin
            grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_count_Pipeline_SET_COUNT_fu_278_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_update_count_Pipeline_SET_COUNT_fu_278_ap_start_reg <= 1'b1;
        end else if ((grp_update_count_Pipeline_SET_COUNT_fu_278_ap_ready == 1'b1)) begin
            grp_update_count_Pipeline_SET_COUNT_fu_278_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_start_reg <= 1'b1;
        end else if ((grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_ready == 1'b1)) begin
            grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        if ((icmp_ln76_fu_348_p2 == 1'd1)) begin
            row_cur_ptr_2_reg_221 <= row_cur_ptr_fu_324_p3;
        end else if ((icmp_ln76_fu_348_p2 == 1'd0)) begin
            row_cur_ptr_2_reg_221 <= row_cur_ptr_1_fu_369_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (cmp78_reg_719 == 1'd0))) begin
        row_prev_ptr_2_reg_231 <= row_prev_ptr_reg_649;
    end else if (((1'b1 == ap_CS_fsm_state8) & (cmp78_reg_719 == 1'd1))) begin
        row_prev_ptr_2_reg_231 <= row_prev_ptr_1_fu_471_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (cmp78_reg_719 == 1'd0))) begin
        write_ptr_2_reg_240 <= write_ptr_reg_657;
    end else if (((1'b1 == ap_CS_fsm_state8) & (cmp78_reg_719 == 1'd1))) begin
        write_ptr_2_reg_240 <= write_ptr_1_fu_503_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        cmp38_not_reg_672 <= cmp38_not_fu_375_p2;
        icmp_ln88_reg_677 <= icmp_ln88_fu_401_p2;
        or_ln88_reg_682 <= or_ln88_fu_407_p2;
        row_prev_ptr_reg_649 <= row_prev_ptr_fu_332_p3;
        sub_ln78_reg_633 <= sub_ln78_fu_309_p2;
        tmp_218_reg_628[4 : 3] <= tmp_218_fu_289_p3[4 : 3];
        tmp_220_reg_638[2 : 1] <= tmp_220_fu_315_p3[2 : 1];
        write_ptr_reg_657 <= write_ptr_fu_340_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cmp50_not_reg_693 <= cmp50_not_fu_421_p2;
        cmp59_not_reg_698 <= cmp59_not_fu_427_p2;
        empty_71_reg_708 <= empty_71_fu_437_p1;
        empty_reg_703 <= empty_fu_433_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cmp78_reg_719 <= cmp78_fu_449_p2;
    end
end

always @ * begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ * begin
    if ((grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ * begin
    if ((grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ * begin
    if ((grp_update_count_Pipeline_SET_COUNT_fu_278_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ * begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state8) & (cmp78_reg_719 == 1'd1))) begin
        ap_phi_mux_row_prev_ptr_2_phi_fu_234_p4 = row_prev_ptr_1_fu_471_p2;
    end else begin
        ap_phi_mux_row_prev_ptr_2_phi_fu_234_p4 = row_prev_ptr_2_reg_231;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state8) & (cmp78_reg_719 == 1'd1))) begin
        ap_phi_mux_write_ptr_2_phi_fu_243_p4 = write_ptr_1_fu_503_p2;
    end else begin
        ap_phi_mux_write_ptr_2_phi_fu_243_p4 = write_ptr_2_reg_240;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_return_0 = select_ln121_fu_515_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_return_1 = select_ln122_fu_529_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_return_2 = select_ln123_fu_543_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        countRegs_regs_availRows_fifo_address0 = zext_ln115_fu_466_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        countRegs_regs_availRows_fifo_address0 = zext_ln78_1_fu_364_p1;
    end else begin
        countRegs_regs_availRows_fifo_address0 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        countRegs_regs_availRows_fifo_ce0 = 1'b1;
    end else begin
        countRegs_regs_availRows_fifo_ce0 = 1'b0;
    end
end

always @ * begin
    if (((icmp_ln76_fu_348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        countRegs_regs_availRows_fifo_we0 = 1'b1;
    end else begin
        countRegs_regs_availRows_fifo_we0 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ext_reqOUT_ce0 = 1'b1;
    end else begin
        ext_reqOUT_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state8) & (cmp78_reg_719 == 1'd1))) begin
        ext_reqOUT_we0 = 1'b1;
    end else begin
        ext_reqOUT_we0 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        procRegs_countTable_address0 = grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        procRegs_countTable_address0 = grp_update_count_Pipeline_CPY_COUNT_fu_249_procRegs_countTable_address0;
    end else begin
        procRegs_countTable_address0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        procRegs_countTable_ce0 = grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        procRegs_countTable_ce0 = grp_update_count_Pipeline_CPY_COUNT_fu_249_procRegs_countTable_ce0;
    end else begin
        procRegs_countTable_ce0 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        procRegs_countTable_we0 = grp_update_count_Pipeline_SET_COUNT_fu_278_procRegs_countTable_we0;
    end else begin
        procRegs_countTable_we0 = 1'b0;
    end
end

always @ * begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_update_count_Pipeline_SET_COUNT_fu_278_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln115_fu_461_p2 = (sub_ln78_reg_633 + trunc_ln115_fu_458_p1);

assign add_ln118_fu_480_p2 = (tmp_218_reg_628 + trunc_ln118_fu_477_p1);

assign add_ln78_fu_358_p2 = (sub_ln78_fu_309_p2 + trunc_ln78_fu_354_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign cmp38_not_fu_375_p2 = ((count_set == 8'd3) ? 1'b1 : 1'b0);

assign cmp50_not_fu_421_p2 = ((ext_count == 8'd2) ? 1'b1 : 1'b0);

assign cmp59_not_fu_427_p2 = ((fetch_count == 8'd2) ? 1'b1 : 1'b0);

assign cmp78_fu_449_p2 = ((row_prev_ptr_reg_649 != row_cur_ptr_2_reg_221) ? 1'b1 : 1'b0);

assign cond30_fu_385_p2 = (empty_70_fu_381_p1 ^ 1'd1);

assign empty_70_fu_381_p1 = count_set[0:0];

assign empty_71_fu_437_p1 = fetch_count[0:0];

assign empty_fu_433_p1 = ext_count[0:0];

assign ext_reqOUT_address0 = zext_ln118_fu_485_p1;

assign ext_reqOUT_d0 = {{{{{{{{3'd5}, {grp_update_count_Pipeline_SET_COUNT_fu_278_req_loc_out}}}, {6'd0}}}, {regs_name}}}, {countRegs_regs_availRows_fifo_q0}};

assign grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_start = grp_update_count_Pipeline_CPY_COUNT_fu_249_ap_start_reg;

assign grp_update_count_Pipeline_SET_COUNT_fu_278_ap_start = grp_update_count_Pipeline_SET_COUNT_fu_278_ap_start_reg;

assign grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_start = grp_update_count_Pipeline_UP_COUNT_1_fu_260_ap_start_reg;

assign icmp_ln121_fu_509_p2 = ((ap_phi_mux_write_ptr_2_phi_fu_243_p4 == 8'd8) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_523_p2 = ((row_cur_ptr_2_reg_221 != 8'd3) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_537_p2 = ((ap_phi_mux_row_prev_ptr_2_phi_fu_234_p4 != 8'd3) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_348_p2 = ((req_row == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_401_p2 = ((tmp_fu_391_p4 != 7'd0) ? 1'b1 : 1'b0);

assign or_ln88_fu_407_p2 = (icmp_ln88_fu_401_p2 | cond30_fu_385_p2);

assign row_cur_ptr_1_fu_369_p2 = (row_cur_ptr_fu_324_p3 + 8'd1);

assign row_cur_ptr_fu_324_p3 = ((init[0:0] == 1'b1) ? 8'd0 : countRegs_1_read);

assign row_prev_ptr_1_fu_471_p2 = (row_prev_ptr_reg_649 + 8'd1);

assign row_prev_ptr_fu_332_p3 = ((init[0:0] == 1'b1) ? 8'd0 : countRegs_2_read);

assign select_ln121_fu_515_p3 = ((icmp_ln121_fu_509_p2[0:0] == 1'b1) ? 8'd0 : ap_phi_mux_write_ptr_2_phi_fu_243_p4);

assign select_ln122_fu_529_p3 = ((icmp_ln122_fu_523_p2[0:0] == 1'b1) ? row_cur_ptr_2_reg_221 : 8'd0);

assign select_ln123_fu_543_p3 = ((icmp_ln123_fu_537_p2[0:0] == 1'b1) ? ap_phi_mux_row_prev_ptr_2_phi_fu_234_p4 : 8'd0);

assign sub_ln78_fu_309_p2 = (tmp_219_fu_301_p3 - zext_ln78_fu_297_p1);

assign tmp_218_fu_289_p3 = {{ext_reqOUT_offset}, {3'd0}};

assign tmp_219_fu_301_p3 = {{countRegs_0_offset}, {2'd0}};

assign tmp_220_fu_315_p3 = {{countTable_offset}, {1'd0}};

assign tmp_fu_391_p4 = {{count_set[7:1]}};

assign trunc_ln115_fu_458_p1 = row_prev_ptr_reg_649[3:0];

assign trunc_ln118_fu_477_p1 = write_ptr_reg_657[4:0];

assign trunc_ln78_fu_354_p1 = row_cur_ptr_fu_324_p3[3:0];

assign write_ptr_1_fu_503_p2 = (write_ptr_reg_657 + 8'd1);

assign write_ptr_fu_340_p3 = ((init[0:0] == 1'b1) ? 8'd0 : out_write_ptr_read);

assign zext_ln115_fu_466_p1 = add_ln115_fu_461_p2;

assign zext_ln118_fu_485_p1 = add_ln118_fu_480_p2;

assign zext_ln78_1_fu_364_p1 = add_ln78_fu_358_p2;

assign zext_ln78_fu_297_p1 = countRegs_0_offset;

always @ (posedge ap_clk) begin
    tmp_218_reg_628[2:0] <= 3'b000;
    tmp_220_reg_638[0] <= 1'b0;
end

endmodule //system_top_update_count
