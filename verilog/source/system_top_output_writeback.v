// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_top_output_writeback (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        init,
        pu_active,
        data_valid,
        data_stream_empty,
        writeback_done_read,
        p_read5,
        comp_data_out_address0,
        comp_data_out_ce0,
        comp_data_out_q0,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] init;
input  [0:0] pu_active;
input  [0:0] data_valid;
input  [0:0] data_stream_empty;
input  [0:0] writeback_done_read;
input  [719:0] p_read5;
output  [5:0] comp_data_out_address0;
output   comp_data_out_ce0;
input  [16:0] comp_data_out_q0;
output  [0:0] ap_return_0;
output  [719:0] ap_return_1;
output  [0:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] ap_return_0;
reg[719:0] ap_return_1;
reg[0:0] ap_return_2;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] or_ln658_1_fu_912_p2;
reg   [0:0] or_ln658_1_reg_1086;
wire   [719:0] select_ln680_fu_936_p3;
wire   [0:0] or_ln673_1_fu_930_p2;
wire   [0:0] and_ln680_fu_950_p2;
wire   [7:0] tmp_result_values_data_M_elems_q0;
reg   [7:0] tmp_result_values_data_M_elems_load_40_reg_1103;
wire    ap_CS_fsm_state4;
wire   [7:0] tmp_result_indices_data_M_elems_q0;
reg   [7:0] tmp_result_indices_data_M_elems_load_40_reg_1118;
wire   [7:0] tmp_result_values_data_M_elems_q1;
reg   [7:0] tmp_result_values_data_M_elems_load_reg_1133;
wire    ap_CS_fsm_state5;
reg   [7:0] tmp_result_values_data_M_elems_load_1_reg_1138;
wire   [7:0] tmp_result_indices_data_M_elems_q1;
reg   [7:0] tmp_result_indices_data_M_elems_load_reg_1153;
reg   [7:0] tmp_result_indices_data_M_elems_load_1_reg_1158;
reg   [7:0] tmp_result_values_data_M_elems_load_2_reg_1173;
wire    ap_CS_fsm_state6;
reg   [7:0] tmp_result_values_data_M_elems_load_3_reg_1178;
reg   [7:0] tmp_result_indices_data_M_elems_load_2_reg_1193;
reg   [7:0] tmp_result_indices_data_M_elems_load_3_reg_1198;
reg   [7:0] tmp_result_values_data_M_elems_load_4_reg_1213;
wire    ap_CS_fsm_state7;
reg   [7:0] tmp_result_values_data_M_elems_load_5_reg_1218;
reg   [7:0] tmp_result_indices_data_M_elems_load_4_reg_1233;
reg   [7:0] tmp_result_indices_data_M_elems_load_5_reg_1238;
reg   [7:0] tmp_result_values_data_M_elems_load_6_reg_1253;
wire    ap_CS_fsm_state8;
reg   [7:0] tmp_result_values_data_M_elems_load_7_reg_1258;
reg   [7:0] tmp_result_indices_data_M_elems_load_6_reg_1273;
reg   [7:0] tmp_result_indices_data_M_elems_load_7_reg_1278;
reg   [7:0] tmp_result_values_data_M_elems_load_8_reg_1293;
wire    ap_CS_fsm_state9;
reg   [7:0] tmp_result_values_data_M_elems_load_9_reg_1298;
reg   [7:0] tmp_result_indices_data_M_elems_load_8_reg_1313;
reg   [7:0] tmp_result_indices_data_M_elems_load_9_reg_1318;
reg   [7:0] tmp_result_values_data_M_elems_load_10_reg_1333;
wire    ap_CS_fsm_state10;
reg   [7:0] tmp_result_values_data_M_elems_load_11_reg_1338;
reg   [7:0] tmp_result_indices_data_M_elems_load_10_reg_1353;
reg   [7:0] tmp_result_indices_data_M_elems_load_11_reg_1358;
reg   [7:0] tmp_result_values_data_M_elems_load_12_reg_1373;
wire    ap_CS_fsm_state11;
reg   [7:0] tmp_result_values_data_M_elems_load_13_reg_1378;
reg   [7:0] tmp_result_indices_data_M_elems_load_12_reg_1393;
reg   [7:0] tmp_result_indices_data_M_elems_load_13_reg_1398;
reg   [7:0] tmp_result_values_data_M_elems_load_14_reg_1413;
wire    ap_CS_fsm_state12;
reg   [7:0] tmp_result_values_data_M_elems_load_15_reg_1418;
reg   [7:0] tmp_result_indices_data_M_elems_load_14_reg_1433;
reg   [7:0] tmp_result_indices_data_M_elems_load_15_reg_1438;
reg   [7:0] tmp_result_values_data_M_elems_load_16_reg_1453;
wire    ap_CS_fsm_state13;
reg   [7:0] tmp_result_values_data_M_elems_load_17_reg_1458;
reg   [7:0] tmp_result_indices_data_M_elems_load_16_reg_1473;
reg   [7:0] tmp_result_indices_data_M_elems_load_17_reg_1478;
reg   [7:0] tmp_result_values_data_M_elems_load_18_reg_1493;
wire    ap_CS_fsm_state14;
reg   [7:0] tmp_result_values_data_M_elems_load_19_reg_1498;
reg   [7:0] tmp_result_indices_data_M_elems_load_18_reg_1513;
reg   [7:0] tmp_result_indices_data_M_elems_load_19_reg_1518;
reg   [7:0] tmp_result_values_data_M_elems_load_20_reg_1533;
wire    ap_CS_fsm_state15;
reg   [7:0] tmp_result_values_data_M_elems_load_21_reg_1538;
reg   [7:0] tmp_result_indices_data_M_elems_load_20_reg_1553;
reg   [7:0] tmp_result_indices_data_M_elems_load_21_reg_1558;
reg   [7:0] tmp_result_values_data_M_elems_load_22_reg_1573;
wire    ap_CS_fsm_state16;
reg   [7:0] tmp_result_values_data_M_elems_load_23_reg_1578;
reg   [7:0] tmp_result_indices_data_M_elems_load_22_reg_1593;
reg   [7:0] tmp_result_indices_data_M_elems_load_23_reg_1598;
reg   [7:0] tmp_result_values_data_M_elems_load_24_reg_1613;
wire    ap_CS_fsm_state17;
reg   [7:0] tmp_result_values_data_M_elems_load_25_reg_1618;
reg   [7:0] tmp_result_indices_data_M_elems_load_24_reg_1633;
reg   [7:0] tmp_result_indices_data_M_elems_load_25_reg_1638;
reg   [7:0] tmp_result_values_data_M_elems_load_26_reg_1653;
wire    ap_CS_fsm_state18;
reg   [7:0] tmp_result_values_data_M_elems_load_27_reg_1658;
reg   [7:0] tmp_result_indices_data_M_elems_load_26_reg_1673;
reg   [7:0] tmp_result_indices_data_M_elems_load_27_reg_1678;
reg   [7:0] tmp_result_values_data_M_elems_load_28_reg_1693;
wire    ap_CS_fsm_state19;
reg   [7:0] tmp_result_values_data_M_elems_load_29_reg_1698;
reg   [7:0] tmp_result_indices_data_M_elems_load_28_reg_1713;
reg   [7:0] tmp_result_indices_data_M_elems_load_29_reg_1718;
reg   [7:0] tmp_result_values_data_M_elems_load_30_reg_1733;
wire    ap_CS_fsm_state20;
reg   [7:0] tmp_result_values_data_M_elems_load_31_reg_1738;
reg   [7:0] tmp_result_indices_data_M_elems_load_30_reg_1753;
reg   [7:0] tmp_result_indices_data_M_elems_load_31_reg_1758;
reg   [7:0] tmp_result_values_data_M_elems_load_32_reg_1773;
wire    ap_CS_fsm_state21;
reg   [7:0] tmp_result_values_data_M_elems_load_33_reg_1778;
reg   [7:0] tmp_result_indices_data_M_elems_load_32_reg_1793;
reg   [7:0] tmp_result_indices_data_M_elems_load_33_reg_1798;
reg   [7:0] tmp_result_values_data_M_elems_load_34_reg_1813;
wire    ap_CS_fsm_state22;
reg   [7:0] tmp_result_values_data_M_elems_load_35_reg_1818;
reg   [7:0] tmp_result_indices_data_M_elems_load_34_reg_1833;
reg   [7:0] tmp_result_indices_data_M_elems_load_35_reg_1838;
reg   [7:0] tmp_result_values_data_M_elems_load_36_reg_1853;
wire    ap_CS_fsm_state23;
reg   [7:0] tmp_result_values_data_M_elems_load_37_reg_1858;
reg   [7:0] tmp_result_indices_data_M_elems_load_36_reg_1873;
reg   [7:0] tmp_result_indices_data_M_elems_load_37_reg_1878;
reg   [5:0] tmp_result_values_data_M_elems_address0;
reg    tmp_result_values_data_M_elems_ce0;
reg    tmp_result_values_data_M_elems_we0;
reg   [5:0] tmp_result_values_data_M_elems_address1;
reg    tmp_result_values_data_M_elems_ce1;
reg   [5:0] tmp_result_indices_data_M_elems_address0;
reg    tmp_result_indices_data_M_elems_ce0;
reg    tmp_result_indices_data_M_elems_we0;
reg   [5:0] tmp_result_indices_data_M_elems_address1;
reg    tmp_result_indices_data_M_elems_ce1;
wire    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_start;
wire    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_done;
wire    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_idle;
wire    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_ready;
wire   [5:0] grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_address0;
wire    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_ce0;
wire    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_we0;
wire   [7:0] grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_d0;
wire   [5:0] grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_address0;
wire    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_ce0;
wire    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_we0;
wire   [7:0] grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_d0;
wire   [63:0] grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_len_out;
wire    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_len_out_ap_vld;
wire   [5:0] grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_comp_data_out_address0;
wire    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_comp_data_out_ce0;
wire   [719:0] or_ln669_s_fu_959_p84;
reg   [719:0] ap_phi_mux_phi_ln690_phi_fu_838_p6;
reg   [719:0] phi_ln690_reg_834;
wire    ap_CS_fsm_state24;
reg   [0:0] ap_phi_mux_tmp_done_phi_fu_851_p6;
reg   [0:0] tmp_done_reg_847;
reg   [0:0] ap_phi_mux_tmp_ready_phi_fu_866_p6;
reg   [0:0] tmp_ready_reg_861;
reg    grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] xor_ln658_1_fu_900_p2;
wire   [0:0] or_ln658_fu_906_p2;
wire   [0:0] xor_ln658_fu_894_p2;
wire   [0:0] xor_ln673_fu_918_p2;
wire   [0:0] or_ln673_fu_924_p2;
wire   [0:0] xor_ln652_fu_888_p2;
wire   [0:0] and_ln680_1_fu_944_p2;
reg   [0:0] ap_return_0_preg;
reg   [719:0] ap_return_1_preg;
reg   [0:0] ap_return_2_preg;
reg   [23:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 1'd0;
#0 ap_return_1_preg = 720'd0;
#0 ap_return_2_preg = 1'd0;
end

system_top_multiply_tmp_mult_out_elems_value_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 41 ),
    .AddressWidth( 6 ))
tmp_result_values_data_M_elems_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_result_values_data_M_elems_address0),
    .ce0(tmp_result_values_data_M_elems_ce0),
    .we0(tmp_result_values_data_M_elems_we0),
    .d0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_d0),
    .q0(tmp_result_values_data_M_elems_q0),
    .address1(tmp_result_values_data_M_elems_address1),
    .ce1(tmp_result_values_data_M_elems_ce1),
    .q1(tmp_result_values_data_M_elems_q1)
);

system_top_multiply_tmp_mult_out_elems_value_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 41 ),
    .AddressWidth( 6 ))
tmp_result_indices_data_M_elems_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_result_indices_data_M_elems_address0),
    .ce0(tmp_result_indices_data_M_elems_ce0),
    .we0(tmp_result_indices_data_M_elems_we0),
    .d0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_d0),
    .q0(tmp_result_indices_data_M_elems_q0),
    .address1(tmp_result_indices_data_M_elems_address1),
    .ce1(tmp_result_indices_data_M_elems_ce1),
    .q1(tmp_result_indices_data_M_elems_q1)
);

system_top_output_writeback_Pipeline_WRITEBACK_LOOP grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_start),
    .ap_done(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_done),
    .ap_idle(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_idle),
    .ap_ready(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_ready),
    .tmp_result_values_data_M_elems_address0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_address0),
    .tmp_result_values_data_M_elems_ce0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_ce0),
    .tmp_result_values_data_M_elems_we0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_we0),
    .tmp_result_values_data_M_elems_d0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_d0),
    .tmp_result_indices_data_M_elems_address0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_address0),
    .tmp_result_indices_data_M_elems_ce0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_ce0),
    .tmp_result_indices_data_M_elems_we0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_we0),
    .tmp_result_indices_data_M_elems_d0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_d0),
    .tmp_result_len_out(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_len_out),
    .tmp_result_len_out_ap_vld(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_len_out_ap_vld),
    .comp_data_out_address0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_comp_data_out_address0),
    .comp_data_out_ce0(grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_comp_data_out_ce0),
    .comp_data_out_q0(comp_data_out_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_return_0_preg <= ap_phi_mux_tmp_ready_phi_fu_866_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 720'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_return_1_preg <= ap_phi_mux_phi_ln690_phi_fu_838_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_return_2_preg <= ap_phi_mux_tmp_done_phi_fu_851_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_start_reg <= 1'b0;
    end else begin
        if (((or_ln658_1_fu_912_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_start_reg <= 1'b1;
        end else if ((grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_ready == 1'b1)) begin
            grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln673_1_fu_930_p2 == 1'd0) & (or_ln658_1_fu_912_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln690_reg_834 <= 720'd0;
    end else if (((or_ln673_1_fu_930_p2 == 1'd1) & (or_ln658_1_fu_912_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln690_reg_834 <= select_ln680_fu_936_p3;
    end else if (((or_ln658_1_reg_1086 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        phi_ln690_reg_834 <= or_ln669_s_fu_959_p84;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln673_1_fu_930_p2 == 1'd1) & (or_ln658_1_fu_912_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_done_reg_847 <= and_ln680_fu_950_p2;
    end else if ((((or_ln673_1_fu_930_p2 == 1'd0) & (or_ln658_1_fu_912_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((or_ln658_1_reg_1086 == 1'd0) & (1'b1 == ap_CS_fsm_state24)))) begin
        tmp_done_reg_847 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln673_1_fu_930_p2 == 1'd1) & (or_ln658_1_fu_912_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_ready_reg_861 <= 1'd0;
    end else if ((((or_ln673_1_fu_930_p2 == 1'd0) & (or_ln658_1_fu_912_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((or_ln658_1_reg_1086 == 1'd0) & (1'b1 == ap_CS_fsm_state24)))) begin
        tmp_ready_reg_861 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        or_ln658_1_reg_1086 <= or_ln658_1_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_result_indices_data_M_elems_load_10_reg_1353 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_11_reg_1358 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_10_reg_1333 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_11_reg_1338 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_result_indices_data_M_elems_load_12_reg_1393 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_13_reg_1398 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_12_reg_1373 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_13_reg_1378 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_result_indices_data_M_elems_load_14_reg_1433 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_15_reg_1438 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_14_reg_1413 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_15_reg_1418 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_result_indices_data_M_elems_load_16_reg_1473 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_17_reg_1478 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_16_reg_1453 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_17_reg_1458 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_result_indices_data_M_elems_load_18_reg_1513 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_19_reg_1518 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_18_reg_1493 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_19_reg_1498 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_result_indices_data_M_elems_load_1_reg_1158 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_reg_1153 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_1_reg_1138 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_reg_1133 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_result_indices_data_M_elems_load_20_reg_1553 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_21_reg_1558 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_20_reg_1533 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_21_reg_1538 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_result_indices_data_M_elems_load_22_reg_1593 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_23_reg_1598 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_22_reg_1573 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_23_reg_1578 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_result_indices_data_M_elems_load_24_reg_1633 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_25_reg_1638 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_24_reg_1613 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_25_reg_1618 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_result_indices_data_M_elems_load_26_reg_1673 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_27_reg_1678 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_26_reg_1653 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_27_reg_1658 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_result_indices_data_M_elems_load_28_reg_1713 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_29_reg_1718 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_28_reg_1693 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_29_reg_1698 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_result_indices_data_M_elems_load_2_reg_1193 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_3_reg_1198 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_2_reg_1173 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_3_reg_1178 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_result_indices_data_M_elems_load_30_reg_1753 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_31_reg_1758 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_30_reg_1733 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_31_reg_1738 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_result_indices_data_M_elems_load_32_reg_1793 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_33_reg_1798 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_32_reg_1773 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_33_reg_1778 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_result_indices_data_M_elems_load_34_reg_1833 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_35_reg_1838 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_34_reg_1813 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_35_reg_1818 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_result_indices_data_M_elems_load_36_reg_1873 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_37_reg_1878 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_36_reg_1853 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_37_reg_1858 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_result_indices_data_M_elems_load_40_reg_1118 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_40_reg_1103 <= tmp_result_values_data_M_elems_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_result_indices_data_M_elems_load_4_reg_1233 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_5_reg_1238 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_4_reg_1213 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_5_reg_1218 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_result_indices_data_M_elems_load_6_reg_1273 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_7_reg_1278 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_6_reg_1253 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_7_reg_1258 <= tmp_result_values_data_M_elems_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_result_indices_data_M_elems_load_8_reg_1313 <= tmp_result_indices_data_M_elems_q0;
        tmp_result_indices_data_M_elems_load_9_reg_1318 <= tmp_result_indices_data_M_elems_q1;
        tmp_result_values_data_M_elems_load_8_reg_1293 <= tmp_result_values_data_M_elems_q0;
        tmp_result_values_data_M_elems_load_9_reg_1298 <= tmp_result_values_data_M_elems_q1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ * begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

always @ * begin
    if ((grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ * begin
    if (((1'b1 == ap_CS_fsm_state24) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ * begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ * begin
    if (((or_ln658_1_reg_1086 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_phi_mux_phi_ln690_phi_fu_838_p6 = or_ln669_s_fu_959_p84;
    end else begin
        ap_phi_mux_phi_ln690_phi_fu_838_p6 = phi_ln690_reg_834;
    end
end

always @ * begin
    if (((or_ln658_1_reg_1086 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_phi_mux_tmp_done_phi_fu_851_p6 = 1'd1;
    end else begin
        ap_phi_mux_tmp_done_phi_fu_851_p6 = tmp_done_reg_847;
    end
end

always @ * begin
    if (((or_ln658_1_reg_1086 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_phi_mux_tmp_ready_phi_fu_866_p6 = 1'd1;
    end else begin
        ap_phi_mux_tmp_ready_phi_fu_866_p6 = tmp_ready_reg_861;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_return_0 = ap_phi_mux_tmp_ready_phi_fu_866_p6;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_return_1 = ap_phi_mux_phi_ln690_phi_fu_838_p6;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_return_2 = ap_phi_mux_tmp_done_phi_fu_851_p6;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_result_indices_data_M_elems_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_result_indices_data_M_elems_address0 = grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_address0;
    end else begin
        tmp_result_indices_data_M_elems_address0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_result_indices_data_M_elems_address1 = 64'd1;
    end else begin
        tmp_result_indices_data_M_elems_address1 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        tmp_result_indices_data_M_elems_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_result_indices_data_M_elems_ce0 = grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_ce0;
    end else begin
        tmp_result_indices_data_M_elems_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        tmp_result_indices_data_M_elems_ce1 = 1'b1;
    end else begin
        tmp_result_indices_data_M_elems_ce1 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_result_indices_data_M_elems_we0 = grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_indices_data_M_elems_we0;
    end else begin
        tmp_result_indices_data_M_elems_we0 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_result_values_data_M_elems_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_result_values_data_M_elems_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_result_values_data_M_elems_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_result_values_data_M_elems_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_result_values_data_M_elems_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_result_values_data_M_elems_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_result_values_data_M_elems_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_result_values_data_M_elems_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_result_values_data_M_elems_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_result_values_data_M_elems_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_result_values_data_M_elems_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_result_values_data_M_elems_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_result_values_data_M_elems_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_result_values_data_M_elems_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_result_values_data_M_elems_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_result_values_data_M_elems_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_result_values_data_M_elems_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_result_values_data_M_elems_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_result_values_data_M_elems_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_result_values_data_M_elems_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_result_values_data_M_elems_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_result_values_data_M_elems_address0 = grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_address0;
    end else begin
        tmp_result_values_data_M_elems_address0 = 'bx;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_result_values_data_M_elems_address1 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_result_values_data_M_elems_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_result_values_data_M_elems_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_result_values_data_M_elems_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_result_values_data_M_elems_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_result_values_data_M_elems_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_result_values_data_M_elems_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_result_values_data_M_elems_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_result_values_data_M_elems_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_result_values_data_M_elems_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_result_values_data_M_elems_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_result_values_data_M_elems_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_result_values_data_M_elems_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_result_values_data_M_elems_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_result_values_data_M_elems_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_result_values_data_M_elems_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_result_values_data_M_elems_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_result_values_data_M_elems_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_result_values_data_M_elems_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_result_values_data_M_elems_address1 = 64'd1;
    end else begin
        tmp_result_values_data_M_elems_address1 = 'bx;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        tmp_result_values_data_M_elems_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_result_values_data_M_elems_ce0 = grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_ce0;
    end else begin
        tmp_result_values_data_M_elems_ce0 = 1'b0;
    end
end

always @ * begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        tmp_result_values_data_M_elems_ce1 = 1'b1;
    end else begin
        tmp_result_values_data_M_elems_ce1 = 1'b0;
    end
end

always @ * begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_result_values_data_M_elems_we0 = grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_values_data_M_elems_we0;
    end else begin
        tmp_result_values_data_M_elems_we0 = 1'b0;
    end
end

always @ * begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((or_ln658_1_fu_912_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if (((or_ln658_1_fu_912_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln680_1_fu_944_p2 = (xor_ln652_fu_888_p2 & pu_active);

assign and_ln680_fu_950_p2 = (writeback_done_read & and_ln680_1_fu_944_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign comp_data_out_address0 = grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_comp_data_out_address0;

assign comp_data_out_ce0 = grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_comp_data_out_ce0;

assign grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_start = grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_ap_start_reg;

assign or_ln658_1_fu_912_p2 = (xor_ln658_fu_894_p2 | or_ln658_fu_906_p2);

assign or_ln658_fu_906_p2 = (xor_ln658_1_fu_900_p2 | data_stream_empty);

assign or_ln669_s_fu_959_p84 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{grp_output_writeback_Pipeline_WRITEBACK_LOOP_fu_877_tmp_result_len_out}, {tmp_result_indices_data_M_elems_q1}}, {tmp_result_indices_data_M_elems_q0}}, {tmp_result_indices_data_M_elems_load_37_reg_1878}}, {tmp_result_indices_data_M_elems_load_36_reg_1873}}, {tmp_result_indices_data_M_elems_load_35_reg_1838}}, {tmp_result_indices_data_M_elems_load_34_reg_1833}}, {tmp_result_indices_data_M_elems_load_33_reg_1798}}, {tmp_result_indices_data_M_elems_load_32_reg_1793}}, {tmp_result_indices_data_M_elems_load_31_reg_1758}}, {tmp_result_indices_data_M_elems_load_30_reg_1753}}, {tmp_result_indices_data_M_elems_load_29_reg_1718}}, {tmp_result_indices_data_M_elems_load_28_reg_1713}}, {tmp_result_indices_data_M_elems_load_27_reg_1678}}, {tmp_result_indices_data_M_elems_load_26_reg_1673}}, {tmp_result_indices_data_M_elems_load_25_reg_1638}}, {tmp_result_indices_data_M_elems_load_24_reg_1633}}, {tmp_result_indices_data_M_elems_load_23_reg_1598}}, {tmp_result_indices_data_M_elems_load_22_reg_1593}}, {tmp_result_indices_data_M_elems_load_21_reg_1558}}, {tmp_result_indices_data_M_elems_load_20_reg_1553}}, {tmp_result_indices_data_M_elems_load_19_reg_1518}}, {tmp_result_indices_data_M_elems_load_18_reg_1513}}, {tmp_result_indices_data_M_elems_load_17_reg_1478}}, {tmp_result_indices_data_M_elems_load_16_reg_1473}}, {tmp_result_indices_data_M_elems_load_15_reg_1438}}, {tmp_result_indices_data_M_elems_load_14_reg_1433}}, {tmp_result_indices_data_M_elems_load_13_reg_1398}}, {tmp_result_indices_data_M_elems_load_12_reg_1393}}, {tmp_result_indices_data_M_elems_load_11_reg_1358}}, {tmp_result_indices_data_M_elems_load_10_reg_1353}}, {tmp_result_indices_data_M_elems_load_9_reg_1318}}, {tmp_result_indices_data_M_elems_load_8_reg_1313}}, {tmp_result_indices_data_M_elems_load_7_reg_1278}}, {tmp_result_indices_data_M_elems_load_6_reg_1273}}, {tmp_result_indices_data_M_elems_load_5_reg_1238}}, {tmp_result_indices_data_M_elems_load_4_reg_1233}}, {tmp_result_indices_data_M_elems_load_3_reg_1198}}, {tmp_result_indices_data_M_elems_load_2_reg_1193}}, {tmp_result_indices_data_M_elems_load_1_reg_1158}}, {tmp_result_indices_data_M_elems_load_reg_1153}}, {tmp_result_indices_data_M_elems_load_40_reg_1118}}, {tmp_result_values_data_M_elems_q1}}, {tmp_result_values_data_M_elems_q0}}, {tmp_result_values_data_M_elems_load_37_reg_1858}}, {tmp_result_values_data_M_elems_load_36_reg_1853}}, {tmp_result_values_data_M_elems_load_35_reg_1818}}, {tmp_result_values_data_M_elems_load_34_reg_1813}}, {tmp_result_values_data_M_elems_load_33_reg_1778}}, {tmp_result_values_data_M_elems_load_32_reg_1773}}, {tmp_result_values_data_M_elems_load_31_reg_1738}}, {tmp_result_values_data_M_elems_load_30_reg_1733}}, {tmp_result_values_data_M_elems_load_29_reg_1698}}, {tmp_result_values_data_M_elems_load_28_reg_1693}}, {tmp_result_values_data_M_elems_load_27_reg_1658}}, {tmp_result_values_data_M_elems_load_26_reg_1653}}, {tmp_result_values_data_M_elems_load_25_reg_1618}}, {tmp_result_values_data_M_elems_load_24_reg_1613}}, {tmp_result_values_data_M_elems_load_23_reg_1578}}, {tmp_result_values_data_M_elems_load_22_reg_1573}}, {tmp_result_values_data_M_elems_load_21_reg_1538}}, {tmp_result_values_data_M_elems_load_20_reg_1533}}, {tmp_result_values_data_M_elems_load_19_reg_1498}}, {tmp_result_values_data_M_elems_load_18_reg_1493}}, {tmp_result_values_data_M_elems_load_17_reg_1458}}, {tmp_result_values_data_M_elems_load_16_reg_1453}}, {tmp_result_values_data_M_elems_load_15_reg_1418}}, {tmp_result_values_data_M_elems_load_14_reg_1413}}, {tmp_result_values_data_M_elems_load_13_reg_1378}}, {tmp_result_values_data_M_elems_load_12_reg_1373}}, {tmp_result_values_data_M_elems_load_11_reg_1338}}, {tmp_result_values_data_M_elems_load_10_reg_1333}}, {tmp_result_values_data_M_elems_load_9_reg_1298}}, {tmp_result_values_data_M_elems_load_8_reg_1293}}, {tmp_result_values_data_M_elems_load_7_reg_1258}}, {tmp_result_values_data_M_elems_load_6_reg_1253}}, {tmp_result_values_data_M_elems_load_5_reg_1218}}, {tmp_result_values_data_M_elems_load_4_reg_1213}}, {tmp_result_values_data_M_elems_load_3_reg_1178}}, {tmp_result_values_data_M_elems_load_2_reg_1173}}, {tmp_result_values_data_M_elems_load_1_reg_1138}}, {tmp_result_values_data_M_elems_load_reg_1133}}, {tmp_result_values_data_M_elems_load_40_reg_1103}};

assign or_ln673_1_fu_930_p2 = (xor_ln658_fu_894_p2 | or_ln673_fu_924_p2);

assign or_ln673_fu_924_p2 = (xor_ln673_fu_918_p2 | xor_ln658_1_fu_900_p2);

assign select_ln680_fu_936_p3 = ((pu_active[0:0] == 1'b1) ? p_read5 : 720'd0);

assign xor_ln652_fu_888_p2 = (init ^ 1'd1);

assign xor_ln658_1_fu_900_p2 = (pu_active ^ 1'd1);

assign xor_ln658_fu_894_p2 = (data_valid ^ 1'd1);

assign xor_ln673_fu_918_p2 = (data_stream_empty ^ 1'd1);

endmodule //system_top_output_writeback
